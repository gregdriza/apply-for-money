{
  "openapi": "3.0.0",
  "info": {
    "title": "Alloy API",
    "version": "1.0.0",
    "description": "hey hey hey, it's the Alloy API!"
  },
  "servers": [
    {
      "url": "https://demo-qasandbox.alloy.co/v1",
      "description": "Public documentation website endpoint"
    }
  ],
  "security": [
    {
      "oauth2": []
    },
    {
      "basic": []
    }
  ],
  "components": {
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "HTTP basic authorization using a workflow token and secret",
        "scheme": "Basic"
      },
      "oauth2": {
        "type": "oauth2",
        "x-default": "viSRrSuUJEid8u0l3dyRTj5ATsWpHX9ShD51TH3j",
        "description": "Oauth2 using a workflow token and secret to generate a bearer token",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/oauth/bearer"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "Manage accounts and account snapshots, aggregated and decisioned through Transaction Monitoring workflows and evaluations."
    },
    {
      "name": "Batches",
      "description": "The batch API allows you to run multiple evaluations with a single API call. First, CSV information is supplied to a POST route, and a batch token is returned. Then, you can supply this batch token to GET routes to get information related to the batch and get the evaluations that were run."
    },
    {
      "name": "Cases",
      "description": "Cases are created within Alloy when a person, place, or thing meets some criteria that needs human review, escalation or resolution - usually in the form of marking the alert that opened the case as a \"false positive\" (this is nothing) OR taking action on the account in question (closing it, cancelling the transaction, declining to open it). There can only be one open case per (entity, category, environment) combination.  We expect many types of customers to only use one category, meaning for them only a single case can be open at a time, per customer."
    },
    {
      "name": "Documents",
      "description": "The document upload API is a two-step process. First, the metadata for the document is specified, and the API returns a file identifier so the file can be streamed directly to the next endpoint. You’ll need to look for the document_token returned in the response because that is necessary to pass to the next endpoint for streaming the file."
    },
    {
      "name": "Entities",
      "description": "Entities are the center of the Alloy world. All evaluations, manual reviews, and documents are related to an entity whether or not you explicitly link them together in your API requests. This endpoint provides the ability to query on an entity and get top-level details about that entity as well as an overview of all items associated with the entity. The tokens from linked evaluations, reviews, or documents can be passed to their own API endpoints for more information about those specific items."
    },
    {
      "name": "Evaluations",
      "description": "Evaluations are a core part of the Alloy world. In order to onboard a customer you can run an evaluation under a specific workflow, and that will create both the evaluation and, in most cases, the entity for that customer."
    },
    {
      "name": "Final Outcomes",
      "description": "Final outcomes are information clients upload about evaluations that yielded positive and negative identifications of fraud cases."
    },
    {
      "name": "Groups",
      "description": "Groups are a series of “Evaluations” and “Entities” that are linked together for a particular purpose."
    },
    {
      "name": "Journeys",
      "description": "A Journey is a decision configuration that allows you to run multiple workflows."
    },
    {
      "name": "Lists",
      "description": "Manage lists of applicant PII. These lists allow for allow-listing and deny-listing applicants based on their personal information."
    },
    {
      "name": "OAuth",
      "description": "These endpoints allow the API to be used by OAuth clients. They convert (application token) + (application secret) credentials into OAuth bearer tokens that can be used with any other API endpoint."
    },
    {
      "name": "Reviews",
      "description": "Reviews are created when an agent in the dashboard manually approves or denies an entity for an application. You can also create them via API using the endpoints shown here."
    },
    {
      "name": "Transactions",
      "description": "Manage transactions. These transactions are aggregated and decisioned through Transaction Monitoring workflows and evaluations."
    }
  ],
  "paths": {
    "/accounts": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create an account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "account_class"
                ],
                "properties": {
                  "account_class": {
                    "description": "Allowed values are (`\"deposit\"`, `\"credit\"`).",
                    "type": "string",
                    "enum": [
                      "deposit",
                      "credit"
                    ]
                  },
                  "external_account_id": {
                    "description": "Unique identifier associated with the account. Max-length 60. At least one of `account_number` or `external_account_id` must be provided.",
                    "type": "string"
                  },
                  "account_number": {
                    "description": "Bank account number. At least one of `account_number` or `external_account_id` must be provided.",
                    "type": "string"
                  },
                  "routing_number": {
                    "description": "Routing number associated with the account.",
                    "type": "string"
                  },
                  "account_type": {
                    "description": "Allowed values are (`\"Merchant\"`, `\"Person\"`, `null`).",
                    "type": "string",
                    "enum": [
                      "Merchant",
                      "Person",
                      null
                    ]
                  },
                  "product_code": {
                    "description": "Identifier of the product name.",
                    "type": "string"
                  },
                  "product_name": {
                    "description": "Name of the product associated with the account.",
                    "type": "string"
                  },
                  "product_number": {
                    "type": "string"
                  },
                  "is_linked_account": {
                    "description": "Determines whether the account is a funding source or linked account.",
                    "type": "boolean"
                  },
                  "link_timestamp": {
                    "description": "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.",
                    "type": "string"
                  },
                  "unlink_timestamp": {
                    "description": "ISO 8601 date. Cannot be future-dated.",
                    "type": "string"
                  },
                  "meta": {
                    "description": "JSON object with any meta information related to the account",
                    "type": "object"
                  },
                  "opening_date": {
                    "description": "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.",
                    "type": "string"
                  },
                  "maturity_date": {
                    "description": "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.",
                    "type": "string"
                  },
                  "closing_date": {
                    "description": "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.",
                    "type": "string"
                  },
                  "entities": {
                    "description": "Array of objects wherein each object represents an entity linked to the account. Each entity must already have been created. (For PATCH /accounts calls, if `entities` is passed in, the account's entities will be replaced with the newly passed in entities. If no `entities` field is passed in, the entities will not change. If `entities` is an empty array, all entities will be removed from the account.)",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "account_holder_type"
                      ],
                      "properties": {
                        "entity_token": {
                          "type": "string",
                          "description": "Alloy entity token. Either `entity_token` or `external_entity_id` must be provided, not both."
                        },
                        "external_entity_id": {
                          "type": "string",
                          "description": "Unique identifier associated with the entity. Either `entity_token` or `external_entity_id` must be provided, not both."
                        },
                        "account_holder_type": {
                          "type": "string",
                          "enum": [
                            "primary",
                            "secondary"
                          ]
                        }
                      }
                    }
                  },
                  "cif_number": {
                    "type": "string"
                  },
                  "card_network": {
                    "type": "string",
                    "description": "Max-length 20."
                  },
                  "expiration_date": {
                    "type": "string"
                  },
                  "tokenization_method": {
                    "type": "string"
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "Max-length 20."
                  },
                  "name_on_card": {
                    "type": "string",
                    "description": "Max-length 100."
                  },
                  "account_number_last4": {
                    "type": "string",
                    "description": "Max-length 4."
                  },
                  "avs": {
                    "type": "string",
                    "description": "Max-length 20."
                  },
                  "country_code": {
                    "type": "string",
                    "description": "2-character ISO Code (mainly used for merchant accounts). Max-length 2."
                  },
                  "currency": {
                    "type": "string",
                    "description": "ISO-4217 currency code. Max-length 4."
                  },
                  "account_snapshot": {
                    "type": "object",
                    "description": "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.",
                    "required": [
                      "timestamp"
                    ],
                    "properties": {
                      "timestamp": {
                        "description": "ISO 8601 timestamp of the account snapshot.",
                        "type": "string"
                      },
                      "meta": {
                        "description": "JSON object with any meta information related to the account snpashot.",
                        "type": "object"
                      },
                      "details": {
                        "description": "JSON object with any details related to the account snapshot.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              null,
                              "Active",
                              "Deactivated",
                              "Frozen",
                              "Pending",
                              "Inactive"
                            ]
                          },
                          "status_detail": {
                            "type": "string"
                          },
                          "loan_credit_limit": {
                            "type": "integer"
                          },
                          "interest_rate": {
                            "type": "number"
                          },
                          "original_interest_rate": {
                            "type": "number"
                          },
                          "original_amount": {
                            "type": "integer"
                          },
                          "ach_push_limit": {
                            "type": "integer"
                          },
                          "ach_pull_limit": {
                            "type": "integer"
                          },
                          "name_first": {
                            "type": "string"
                          },
                          "name_last": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "mailing_address_line1": {
                            "type": "string"
                          },
                          "mailing_address_line2": {
                            "type": "string"
                          },
                          "mailing_address_city": {
                            "type": "string"
                          },
                          "mailing_address_state": {
                            "type": "string"
                          },
                          "mailing_address_postal_code": {
                            "type": "string"
                          },
                          "mailing_address_country_code": {
                            "description": "3-character country code (e.g. \"USA\")",
                            "type": "string"
                          },
                          "primary_address_line1": {
                            "type": "string"
                          },
                          "primary_address_line2": {
                            "type": "string"
                          },
                          "primary_address_city": {
                            "type": "string"
                          },
                          "primary_address_state": {
                            "type": "string"
                          },
                          "primary_address_postal_code": {
                            "type": "string"
                          },
                          "primary_address_country_code": {
                            "description": "3-character country code (e.g. \"USA\").",
                            "type": "string"
                          }
                        }
                      },
                      "account_view": {
                        "description": "JSON object",
                        "type": "object",
                        "properties": {
                          "account_balance": {
                            "description": "Account balance in cents.",
                            "type": "integer"
                          },
                          "date_last_activity": {
                            "description": "ISO 8601 timestamp of last activity.",
                            "type": "string"
                          },
                          "is_good_standing": {
                            "type": "boolean"
                          },
                          "past_due_days": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "external_account_id": "test-account-001",
                  "account_class": "deposit",
                  "entities": [
                    {
                      "external_entity_id": "entity-01",
                      "account_holder_type": "primary"
                    }
                  ],
                  "account_snapshot": {
                    "timestamp": "2022-03-21T21:50:07.623Z",
                    "details": {
                      "status": "Active"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "x-summary": "OK",
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bank_account_token": {
                      "description": "The token of the bank account that was created.",
                      "type": "string"
                    },
                    "account_class": {
                      "description": "Allowed values are (`\"deposit\"`, `\"credit\"`).",
                      "type": "string",
                      "enum": [
                        "deposit",
                        "credit"
                      ]
                    },
                    "external_account_id": {
                      "description": "Unique identifier associated with the account. Max-length 60. At least one of `account_number` or `external_account_id` must be provided.",
                      "type": "string"
                    },
                    "account_number": {
                      "description": "Bank account number. At least one of `account_number` or `external_account_id` must be provided.",
                      "type": "string"
                    },
                    "routing_number": {
                      "description": "Routing number associated with the account.",
                      "type": "string"
                    },
                    "account_type": {
                      "description": "Allowed values are (`\"Merchant\"`, `\"Person\"`, `null`).",
                      "type": "string",
                      "enum": [
                        "Merchant",
                        "Person",
                        null
                      ]
                    },
                    "product_code": {
                      "description": "Identifier of the product name.",
                      "type": "string"
                    },
                    "product_name": {
                      "description": "Name of the product associated with the account.",
                      "type": "string"
                    },
                    "product_number": {
                      "type": "string"
                    },
                    "is_linked_account": {
                      "description": "Determines whether the account is a funding source or linked account.",
                      "type": "boolean"
                    },
                    "link_timestamp": {
                      "description": "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.",
                      "type": "string"
                    },
                    "meta": {
                      "description": "JSON object with any meta information related to the account",
                      "type": "object"
                    },
                    "opening_date": {
                      "description": "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.",
                      "type": "string"
                    },
                    "maturity_date": {
                      "description": "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.",
                      "type": "string"
                    },
                    "closing_date": {
                      "description": "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.",
                      "type": "string"
                    },
                    "entities": {
                      "description": "Array of objects wherein each object represents an entity linked to the account. Each entity must already have been created. (For PATCH /accounts calls, if `entities` is passed in, the account's entities will be replaced with the newly passed in entities. If no `entities` field is passed in, the entities will not change. If `entities` is an empty array, all entities will be removed from the account.)",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "account_holder_type"
                        ],
                        "properties": {
                          "entity_token": {
                            "type": "string",
                            "description": "Alloy entity token. Either `entity_token` or `external_entity_id` must be provided, not both."
                          },
                          "external_entity_id": {
                            "type": "string",
                            "description": "Unique identifier associated with the entity. Either `entity_token` or `external_entity_id` must be provided, not both."
                          },
                          "account_holder_type": {
                            "type": "string",
                            "enum": [
                              "primary",
                              "secondary"
                            ]
                          }
                        }
                      }
                    },
                    "cif_number": {
                      "type": "string"
                    },
                    "card_network": {
                      "type": "string",
                      "description": "Max-length 20."
                    },
                    "expiration_date": {
                      "type": "string"
                    },
                    "tokenization_method": {
                      "type": "string"
                    },
                    "merchant_category_code": {
                      "type": "string",
                      "description": "Max-length 20."
                    },
                    "name_on_card": {
                      "type": "string",
                      "description": "Max-length 100."
                    },
                    "account_number_last4": {
                      "type": "string",
                      "description": "Max-length 4."
                    },
                    "avs": {
                      "type": "string",
                      "description": "Max-length 20."
                    },
                    "country_code": {
                      "type": "string",
                      "description": "2-character ISO Code (mainly used for merchant accounts). Max-length 2."
                    },
                    "currency": {
                      "type": "string",
                      "description": "ISO-4217 currency code. Max-length 4."
                    }
                  },
                  "example": {
                    "status_code": 201,
                    "error": null,
                    "external_account_id": "test-account-001",
                    "bank_account_token": "A-P1HmBXO3a2lElibmotg7",
                    "account_class": "deposit",
                    "entities": [
                      {
                        "account_holder_type": "primary",
                        "external_entity_id": "entity-01",
                        "entity_token": "P-MSBW0ff3TQG7IYPvaoHs"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{bank_account_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "bank_account_token",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update an account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "account_class"
                ],
                "properties": {
                  "account_class": {
                    "description": "Allowed values are (`\"deposit\"`, `\"credit\"`).",
                    "type": "string",
                    "enum": [
                      "deposit",
                      "credit"
                    ]
                  },
                  "external_account_id": {
                    "description": "Unique identifier associated with the account. Max-length 60. At least one of `account_number` or `external_account_id` must be provided.",
                    "type": "string"
                  },
                  "account_number": {
                    "description": "Bank account number. At least one of `account_number` or `external_account_id` must be provided.",
                    "type": "string"
                  },
                  "routing_number": {
                    "description": "Routing number associated with the account.",
                    "type": "string"
                  },
                  "account_type": {
                    "description": "Allowed values are (`\"Merchant\"`, `\"Person\"`, `null`).",
                    "type": "string",
                    "enum": [
                      "Merchant",
                      "Person",
                      null
                    ]
                  },
                  "product_code": {
                    "description": "Identifier of the product name.",
                    "type": "string"
                  },
                  "product_name": {
                    "description": "Name of the product associated with the account.",
                    "type": "string"
                  },
                  "product_number": {
                    "type": "string"
                  },
                  "is_linked_account": {
                    "description": "Determines whether the account is a funding source or linked account.",
                    "type": "boolean"
                  },
                  "link_timestamp": {
                    "description": "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.",
                    "type": "string"
                  },
                  "unlink_timestamp": {
                    "description": "ISO 8601 date. Cannot be future-dated.",
                    "type": "string"
                  },
                  "meta": {
                    "description": "JSON object with any meta information related to the account",
                    "type": "object"
                  },
                  "opening_date": {
                    "description": "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.",
                    "type": "string"
                  },
                  "maturity_date": {
                    "description": "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.",
                    "type": "string"
                  },
                  "closing_date": {
                    "description": "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.",
                    "type": "string"
                  },
                  "entities": {
                    "description": "Array of objects wherein each object represents an entity linked to the account. Each entity must already have been created. (For PATCH /accounts calls, if `entities` is passed in, the account's entities will be replaced with the newly passed in entities. If no `entities` field is passed in, the entities will not change. If `entities` is an empty array, all entities will be removed from the account.)",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "account_holder_type"
                      ],
                      "properties": {
                        "entity_token": {
                          "type": "string",
                          "description": "Alloy entity token. Either `entity_token` or `external_entity_id` must be provided, not both."
                        },
                        "external_entity_id": {
                          "type": "string",
                          "description": "Unique identifier associated with the entity. Either `entity_token` or `external_entity_id` must be provided, not both."
                        },
                        "account_holder_type": {
                          "type": "string",
                          "enum": [
                            "primary",
                            "secondary"
                          ]
                        }
                      }
                    }
                  },
                  "cif_number": {
                    "type": "string"
                  },
                  "card_network": {
                    "type": "string",
                    "description": "Max-length 20."
                  },
                  "expiration_date": {
                    "type": "string"
                  },
                  "tokenization_method": {
                    "type": "string"
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "Max-length 20."
                  },
                  "name_on_card": {
                    "type": "string",
                    "description": "Max-length 100."
                  },
                  "account_number_last4": {
                    "type": "string",
                    "description": "Max-length 4."
                  },
                  "avs": {
                    "type": "string",
                    "description": "Max-length 20."
                  },
                  "country_code": {
                    "type": "string",
                    "description": "2-character ISO Code (mainly used for merchant accounts). Max-length 2."
                  },
                  "currency": {
                    "type": "string",
                    "description": "ISO-4217 currency code. Max-length 4."
                  },
                  "account_snapshot": {
                    "type": "object",
                    "description": "JSON object. Account snapshots are upserted according to their `timestamp` value. If a snapshot already exists for a given account and timestamp value, it will be updated; otherwise, a new account snapshot will be created.",
                    "required": [
                      "timestamp"
                    ],
                    "properties": {
                      "timestamp": {
                        "description": "ISO 8601 timestamp of the account snapshot.",
                        "type": "string"
                      },
                      "meta": {
                        "description": "JSON object with any meta information related to the account snpashot.",
                        "type": "object"
                      },
                      "details": {
                        "description": "JSON object with any details related to the account snapshot.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              null,
                              "Active",
                              "Deactivated",
                              "Frozen",
                              "Pending",
                              "Inactive"
                            ]
                          },
                          "status_detail": {
                            "type": "string"
                          },
                          "loan_credit_limit": {
                            "type": "integer"
                          },
                          "interest_rate": {
                            "type": "number"
                          },
                          "original_interest_rate": {
                            "type": "number"
                          },
                          "original_amount": {
                            "type": "integer"
                          },
                          "ach_push_limit": {
                            "type": "integer"
                          },
                          "ach_pull_limit": {
                            "type": "integer"
                          },
                          "name_first": {
                            "type": "string"
                          },
                          "name_last": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "mailing_address_line1": {
                            "type": "string"
                          },
                          "mailing_address_line2": {
                            "type": "string"
                          },
                          "mailing_address_city": {
                            "type": "string"
                          },
                          "mailing_address_state": {
                            "type": "string"
                          },
                          "mailing_address_postal_code": {
                            "type": "string"
                          },
                          "mailing_address_country_code": {
                            "description": "3-character country code (e.g. \"USA\")",
                            "type": "string"
                          },
                          "primary_address_line1": {
                            "type": "string"
                          },
                          "primary_address_line2": {
                            "type": "string"
                          },
                          "primary_address_city": {
                            "type": "string"
                          },
                          "primary_address_state": {
                            "type": "string"
                          },
                          "primary_address_postal_code": {
                            "type": "string"
                          },
                          "primary_address_country_code": {
                            "description": "3-character country code (e.g. \"USA\").",
                            "type": "string"
                          }
                        }
                      },
                      "account_view": {
                        "description": "JSON object",
                        "type": "object",
                        "properties": {
                          "account_balance": {
                            "description": "Account balance in cents.",
                            "type": "integer"
                          },
                          "date_last_activity": {
                            "description": "ISO 8601 timestamp of last activity.",
                            "type": "string"
                          },
                          "is_good_standing": {
                            "type": "boolean"
                          },
                          "past_due_days": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "external_account_id": "test-account-001",
                  "account_class": "deposit",
                  "entities": [
                    {
                      "external_entity_id": "entity-01",
                      "account_holder_type": "primary"
                    }
                  ],
                  "account_snapshot": {
                    "timestamp": "2022-03-21T21:50:07.623Z",
                    "details": {
                      "status": "Active"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bank_account_token": {
                      "description": "The token of the bank account that was created.",
                      "type": "string"
                    },
                    "account_class": {
                      "description": "Allowed values are (`\"deposit\"`, `\"credit\"`).",
                      "type": "string",
                      "enum": [
                        "deposit",
                        "credit"
                      ]
                    },
                    "external_account_id": {
                      "description": "Unique identifier associated with the account. Max-length 60. At least one of `account_number` or `external_account_id` must be provided.",
                      "type": "string"
                    },
                    "account_number": {
                      "description": "Bank account number. At least one of `account_number` or `external_account_id` must be provided.",
                      "type": "string"
                    },
                    "routing_number": {
                      "description": "Routing number associated with the account.",
                      "type": "string"
                    },
                    "account_type": {
                      "description": "Allowed values are (`\"Merchant\"`, `\"Person\"`, `null`).",
                      "type": "string",
                      "enum": [
                        "Merchant",
                        "Person",
                        null
                      ]
                    },
                    "product_code": {
                      "description": "Identifier of the product name.",
                      "type": "string"
                    },
                    "product_name": {
                      "description": "Name of the product associated with the account.",
                      "type": "string"
                    },
                    "product_number": {
                      "type": "string"
                    },
                    "is_linked_account": {
                      "description": "Determines whether the account is a funding source or linked account.",
                      "type": "boolean"
                    },
                    "link_timestamp": {
                      "description": "ISO 8601 date. Required when `is_linked_account` is true. Cannot be future-dated.",
                      "type": "string"
                    },
                    "unlink_timestamp": {
                      "description": "ISO 8601 date.",
                      "type": "string"
                    },
                    "meta": {
                      "description": "JSON object with any meta information related to the account",
                      "type": "object"
                    },
                    "opening_date": {
                      "description": "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was opened.",
                      "type": "string"
                    },
                    "maturity_date": {
                      "description": "UTC/ISO dates are both accepted. Strings are converted to ISO timestamps. Date on which the final payment is due on a loan or other financial instrument, such as a bond or term deposit, at which point the principal is due to be paid.",
                      "type": "string"
                    },
                    "closing_date": {
                      "description": "UTC/ISO dates both accepted. Strings are converted to ISO timestamps. Date the account was closed.",
                      "type": "string"
                    },
                    "entities": {
                      "description": "Array of objects wherein each object represents an entity linked to the account. Each entity must already have been created. (For PATCH /accounts calls, if `entities` is passed in, the account's entities will be replaced with the newly passed in entities. If no `entities` field is passed in, the entities will not change. If `entities` is an empty array, all entities will be removed from the account.)",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "account_holder_type"
                        ],
                        "properties": {
                          "entity_token": {
                            "type": "string",
                            "description": "Alloy entity token. Either `entity_token` or `external_entity_id` must be provided, not both."
                          },
                          "external_entity_id": {
                            "type": "string",
                            "description": "Unique identifier associated with the entity. Either `entity_token` or `external_entity_id` must be provided, not both."
                          },
                          "account_holder_type": {
                            "type": "string",
                            "enum": [
                              "primary",
                              "secondary"
                            ]
                          }
                        }
                      }
                    },
                    "cif_number": {
                      "type": "string"
                    },
                    "card_network": {
                      "type": "string",
                      "description": "Max-length 20."
                    },
                    "expiration_date": {
                      "type": "string"
                    },
                    "tokenization_method": {
                      "type": "string"
                    },
                    "merchant_category_code": {
                      "type": "string",
                      "description": "Max-length 20."
                    },
                    "name_on_card": {
                      "type": "string",
                      "description": "Max-length 100."
                    },
                    "account_number_last4": {
                      "type": "string",
                      "description": "Max-length 4."
                    },
                    "avs": {
                      "type": "string",
                      "description": "Max-length 20."
                    },
                    "country_code": {
                      "type": "string",
                      "description": "2-character ISO Code (mainly used for merchant accounts). Max-length 2."
                    },
                    "currency": {
                      "type": "string",
                      "description": "ISO-4217 currency code. Max-length 4."
                    }
                  },
                  "example": {
                    "status_code": 200,
                    "error": null,
                    "external_account_id": "test-account-001",
                    "bank_account_token": "A-P1HmBXO3a2lElibmotg7",
                    "account_class": "deposit",
                    "entities": [
                      {
                        "account_holder_type": "primary",
                        "external_entity_id": "entity-01",
                        "entity_token": "P-MSBW0ff3TQG7IYPvaoHs"
                      }
                    ],
                    "account_number": null,
                    "cif_number": null,
                    "account_type": null,
                    "product_code": null,
                    "product_name": null,
                    "opening_date": null,
                    "maturity_date": null,
                    "closing_date": null,
                    "activation_date": null,
                    "expiration_date": null,
                    "meta": null,
                    "routing_number": null,
                    "card_network": null,
                    "account_name": null,
                    "tokenization_method": null,
                    "merchant_category_code": null,
                    "name_on_card": null,
                    "account_number_last4": null,
                    "avs": null,
                    "country_code": null,
                    "currency": "USD",
                    "description": null,
                    "is_linked_account": false,
                    "link_timestamp": null,
                    "unlink_timestamp": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batches/{batch_token}": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "Get Information Related to a Batch",
        "parameters": [
          {
            "in": "path",
            "name": "batch_token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Token of batch to retrieve"
          }
        ],
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Batch",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        },
                        "evaluations": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "batch_token": {
                      "type": "string"
                    },
                    "batch_status": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "number"
                    },
                    "completed_at": {
                      "type": "number"
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "total_records": {
                          "type": "number"
                        },
                        "evaluation_status": {
                          "type": "object",
                          "properties": {
                            "complete": {
                              "type": "number"
                            },
                            "failed": {
                              "type": "number"
                            },
                            "waiting": {
                              "type": "number"
                            },
                            "webhook_pending": {
                              "type": "number"
                            },
                            "other": {
                              "type": "number"
                            },
                            "none": {
                              "type": "number"
                            }
                          }
                        },
                        "evaluation_result": {
                          "type": "object",
                          "properties": {
                            "partial": {
                              "type": "number"
                            },
                            "success": {
                              "type": "number"
                            },
                            "none": {
                              "type": "number"
                            }
                          }
                        },
                        "row_status": {
                          "type": "object",
                          "properties": {
                            "pending": {
                              "type": "number"
                            },
                            "complete": {
                              "type": "number"
                            },
                            "failed": {
                              "type": "number"
                            },
                            "timed_out": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get a list of all possible cases created using Alloy Case Management.",
        "description": "Retrieves the list of all cases created. Note that this is a long-running query and needs to be paginated.",
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Case",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "status_code": {
                        "type": "number"
                      },
                      "error": {
                        "type": "string"
                      },
                      "case_token": {
                        "type": "string"
                      },
                      "entity_token": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "closed": {
                        "type": "boolean"
                      },
                      "sandbox": {
                        "type": "boolean"
                      },
                      "unread": {
                        "type": "boolean"
                      },
                      "created_at": {
                        "type": "number"
                      },
                      "updated_at": {
                        "type": "number"
                      },
                      "closed_at": {
                        "type": "number"
                      },
                      "assigned_agent_email": {
                        "type": "string"
                      },
                      "assigned_agent_name": {
                        "type": "string"
                      },
                      "program_name": {
                        "type": "string"
                      },
                      "alerts": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "customvalue": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "customer_tag_type_name": {
                        "type": "string"
                      },
                      "customer_tag_type_description": {
                        "type": "string"
                      },
                      "is_manual": {
                        "type": "boolean"
                      },
                      "created_by_agent_name": {
                        "type": "string"
                      },
                      "created_by_agent_email": {
                        "type": "string"
                      },
                      "_embedded": {
                        "properties": {
                          "entity": {
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "entity_token": {
                                "type": "string"
                              },
                              "external_entity_id": {
                                "type": "number"
                              },
                              "type": {
                                "type": "string"
                              },
                              "_links": {
                                "type": "object",
                                "properties": {
                                  "self": {
                                    "properties": {
                                      "href": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "case": {
                                    "properties": {
                                      "href": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "cases": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            }
                          },
                          "self": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            }
                          },
                          "evidences": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            }
                          },
                          "works": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cases"
        ],
        "summary": "Create a manual case",
        "description": "Create a manual case by using entity token or entity external ID, case type, a list of alerts, and a note.",
        "requestBody": {
          "description": "Entity token or external ID and case type must exist in database and the list of alerts must be *case-generating* tags.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "entity_token_or_external_id",
                  "case_type",
                  "note",
                  "alerts"
                ],
                "properties": {
                  "entity_token_or_external_id": {
                    "type": "string",
                    "description": "Entity's token or external entity id"
                  },
                  "case_type": {
                    "type": "string",
                    "description": "Customer tag type name"
                  },
                  "note": {
                    "type": "string",
                    "description": "Any kind of note"
                  },
                  "alerts": {
                    "type": "array",
                    "description": "An array of case generating alerts",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Case was successfully created. Returns case token of the newly created case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "case_token": {
                      "type": "string",
                      "description": "Case token of newly created case"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "x-summary": "Invalid",
            "description": "For missing any required request body properties or the property does not exist in the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "Validation Error",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of error (Request Body Validation Error)"
                        },
                        "message": {
                          "type": "string",
                          "description": "A description for which property is invalid"
                        },
                        "details": {
                          "type": "object",
                          "description": "An object to indicate the key/value that was invalid"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "x-summary": "Conflict",
            "description": "Case already exists with the same entity id, customer id, and case type. Returns case token of the existing case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "Conflict Error",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of error (Conflict Error)"
                        },
                        "message": {
                          "type": "string",
                          "description": "Entity already has an opened case with this case type. Please add alerts to the existing case."
                        },
                        "details": {
                          "type": "object",
                          "description": "An object to indicate the existing case",
                          "properties": {
                            "case_token": {
                              "type": "string",
                              "description": "Case token of the existing case."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{case_token}": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get a case by a uniquely defined case token",
        "description": "Retrieves a single case uniquely defined by a case token. Case tokens are alphanumeric characters that start with a prefix \"C-\".",
        "parameters": [
          {
            "in": "path",
            "name": "case_token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Token of case to get."
          }
        ],
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Case",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    },
                    "case_token": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "closed": {
                      "type": "boolean"
                    },
                    "sandbox": {
                      "type": "boolean"
                    },
                    "unread": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "number"
                    },
                    "closed_at": {
                      "type": "number"
                    },
                    "assigned_agent_email": {
                      "type": "string"
                    },
                    "assigned_agent_name": {
                      "type": "string"
                    },
                    "program_name": {
                      "type": "string"
                    },
                    "alerts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "customvalue": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "customer_tag_type_name": {
                      "type": "string"
                    },
                    "customer_tag_type_description": {
                      "type": "string"
                    },
                    "is_manual": {
                      "type": "boolean"
                    },
                    "created_by_agent_name": {
                      "type": "string"
                    },
                    "created_by_agent_email": {
                      "type": "string"
                    },
                    "_embedded": {
                      "properties": {
                        "entity": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "entity_token": {
                              "type": "string"
                            },
                            "external_entity_id": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string"
                            },
                            "_links": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "case": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "cases": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        },
                        "self": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        },
                        "evidences": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        },
                        "works": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{case_token}/evidences": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get case evidences by case token",
        "description": "Retrieves a list of case evidences uniquely defined by a case token. Case tokens are alphanumeric characters that start with a prefix \"C-\".",
        "parameters": [
          {
            "in": "path",
            "name": "case_token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Token of case to get evidence for."
          }
        ],
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "CaseEvidence",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    },
                    "_embedded": {
                      "properties": {
                        "evidences": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "created_at": {
                                "type": "number"
                              },
                              "occurred_at": {
                                "type": "number"
                              },
                              "transaction_id": {
                                "type": "number"
                              },
                              "evaluation_token": {
                                "type": "string"
                              },
                              "alerts": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "customvalue": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "_embedded": {
                                "type": "object",
                                "properties": {
                                  "transaction": {
                                    "properties": {
                                      "transaction_id": {
                                        "type": "number"
                                      },
                                      "amount": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "_links": {
                      "properties": {
                        "case": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        },
                        "self": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{case_token}/works": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get case works for a case",
        "description": "Retrieves a list of case works defined for a given case by a case token. Case work is any action an agent takes on a case. The three main types of work are `closure` (close a case), `status` (change case status), or `note` (leave a note on a case). All three types of case works can have a note.\n",
        "parameters": [
          {
            "in": "path",
            "name": "case_token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Token of case to get works for."
          }
        ],
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "CaseEvidence",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "works": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "note",
                                  "closure",
                                  "status"
                                ]
                              },
                              "note": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "closed": {
                                "type": "boolean"
                              },
                              "reasons": {
                                "type": "array"
                              },
                              "created_at": {
                                "type": "number"
                              },
                              "_embedded": {
                                "type": "object",
                                "properties": {
                                  "created_by": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        },
                        "case": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/documents": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Describe a Document Before an Entity is Created",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "extension",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "extension": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  },
                  "note_author_agent_email": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "license_photo",
                  "extension": "jpg",
                  "type": "license",
                  "note": "This is a license photo",
                  "note_author_agent_email": "cool_agent@fakedomain.net"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document_token": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "extension": {
                      "type": "string"
                    },
                    "uploaded": {
                      "type": "boolean"
                    },
                    "timestamp": {
                      "type": "number"
                    },
                    "approved": {
                      "type": "string"
                    },
                    "approval_agent_email": {
                      "type": "string"
                    },
                    "approval_timestamp": {
                      "type": "number"
                    },
                    "notes": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "note": {
                            "type": "string"
                          },
                          "note_author_agent_email": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "number"
                          },
                          "updated_at": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/documents/{document_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "document_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with document."
        }
      ],
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Submit a Document File Before an Enity is Created",
        "description": "Now that that metadata for the file has been specified, you just need to stream the file to the location we’ve allocated for it. The response should be the same as for the preceding `POST` request endpoint except `uploaded` will be true.",
        "requestBody": {
          "content": {
            "image": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "document_token": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "extension": {
                        "type": "string"
                      },
                      "uploaded": {
                        "type": "boolean"
                      },
                      "timestamp": {
                        "type": "number"
                      },
                      "approved": {
                        "type": "string"
                      },
                      "approval_agent_email": {
                        "type": "string"
                      },
                      "approval_timestamp": {
                        "type": "number"
                      },
                      "notes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "note": {
                              "type": "string"
                            },
                            "note_author_agent_email": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "number"
                            },
                            "updated_at": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entities/{entity_token}/documents": {
      "parameters": [
        {
          "in": "path",
          "name": "entity_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token of entity for associated documents."
        }
      ],
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Describe a Document Before Uploading",
        "description": "The document upload API is a two-step process. First, the metadata for the document is specified, and the API returns a file identifier so the file can be streamed directly to the next endpoint. You’ll need to look for the document_token returned in the response because that is necessary to pass to the next endpoint for streaming the file.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "extension",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "extension": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  },
                  "note_author_agent_email": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "license_photo",
                  "extension": "jpg",
                  "type": "license",
                  "note": "This is a license photo",
                  "note_author_agent_email": "cool_agent@fakedomain.net"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document_token": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "extension": {
                      "type": "string"
                    },
                    "uploaded": {
                      "type": "boolean"
                    },
                    "timestamp": {
                      "type": "number"
                    },
                    "approved": {
                      "type": "string"
                    },
                    "approval_agent_email": {
                      "type": "string"
                    },
                    "approval_timestamp": {
                      "type": "number"
                    },
                    "notes": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "note": {
                            "type": "string"
                          },
                          "note_author_agent_email": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "number"
                          },
                          "updated_at": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get a List of All Documents for an Entity",
        "description": "All documents for an entity can be queried using this endpoint. All metadata for the documents is available, but the documents themselves must be downloaded individually.",
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "document_token": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "extension": {
                        "type": "string"
                      },
                      "uploaded": {
                        "type": "boolean"
                      },
                      "timestamp": {
                        "type": "number"
                      },
                      "approved": {
                        "type": "string"
                      },
                      "approval_agent_email": {
                        "type": "string"
                      },
                      "approval_timestamp": {
                        "type": "number"
                      },
                      "notes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "note": {
                              "type": "string"
                            },
                            "note_author_agent_email": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "number"
                            },
                            "updated_at": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entities/{entity_token}/documents/{document_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "document_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with document."
        },
        {
          "in": "path",
          "name": "entity_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token of entity for associated documents."
        }
      ],
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Submit a Document File for an Entity",
        "description": "Now that that metadata for the file has been specified, you just need to stream the file to the location we’ve allocated for it. The response should be the same as for the preceding `POST` request endpoint except `uploaded` will be true.",
        "requestBody": {
          "content": {
            "image": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "document_token": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "extension": {
                        "type": "string"
                      },
                      "uploaded": {
                        "type": "boolean"
                      },
                      "timestamp": {
                        "type": "number"
                      },
                      "approved": {
                        "type": "string"
                      },
                      "approval_agent_email": {
                        "type": "string"
                      },
                      "approval_timestamp": {
                        "type": "number"
                      },
                      "notes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "note": {
                              "type": "string"
                            },
                            "note_author_agent_email": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "number"
                            },
                            "updated_at": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Documents"
        ],
        "summary": "Update Document Metadata",
        "description": "If you want to mark a document as “approved” or “denied” (if you have a document review process), or just change the name or type of a document, you can do so with the PATCH endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "approved",
                  "type",
                  "approval_agent_email",
                  "name"
                ],
                "properties": {
                  "approved": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string"
                  },
                  "approval_agent_email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "document_token": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "extension": {
                        "type": "string"
                      },
                      "uploaded": {
                        "type": "boolean"
                      },
                      "timestamp": {
                        "type": "number"
                      },
                      "approved": {
                        "type": "string"
                      },
                      "approval_agent_email": {
                        "type": "string"
                      },
                      "approval_timestamp": {
                        "type": "number"
                      },
                      "notes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "note": {
                              "type": "string"
                            },
                            "note_author_agent_email": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "number"
                            },
                            "updated_at": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download a Document",
        "description": "This endpoint will return a file stream of the requested document.",
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Document",
            "content": {
              "image": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/entities/{entity_token}/documents/{document_token}/notes": {
      "parameters": [
        {
          "in": "path",
          "name": "document_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with document."
        },
        {
          "in": "path",
          "name": "entity_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token of entity for associated documents."
        }
      ],
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Add Notes to a Document",
        "description": "You can add an unlimited amount of notes to a document to keep track of whatever information is needed. All you need is to pass the note along with the email of the author of the note (must be a user associated with your customer account) to this API endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "note",
                  "note_author_agent_email"
                ],
                "properties": {
                  "note": {
                    "type": "string"
                  },
                  "note_author_agent_email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note": {
                      "type": "string"
                    },
                    "note_author_agent_email": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entities/{entity_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "entity_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with entity."
        }
      ],
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Get Information Related to an Entity",
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "number"
                    },
                    "evaluations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "evaluation_token": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "status": {
                            "type": "string"
                          },
                          "application_name": {
                            "type": "string"
                          },
                          "outcome": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "document_token": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "reviews": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "review_token": {
                            "description": "Unique ID for the Review.",
                            "type": "string"
                          },
                          "entity_token": {
                            "description": "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.",
                            "type": "string"
                          },
                          "group_token": {
                            "description": "Unique ID for the Group (of Entities) associated with the Review.",
                            "type": "string"
                          },
                          "application_token": {
                            "description": "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.",
                            "type": "string"
                          },
                          "outcome": {
                            "description": "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.",
                            "type": "string"
                          },
                          "application_name": {
                            "description": "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.",
                            "type": "string"
                          },
                          "reviewer": {
                            "description": "Email of the Agent that created the Review.",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "Unix timestamp when the Review was created.",
                            "type": "number"
                          },
                          "reasons": {
                            "type": "array",
                            "description": "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "agent": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "description": "Valid email of agent with Alloy account access.",
                                "type": "string"
                              },
                              "external_id": {
                                "description": "Unique external ID associated with the Agent, if any.",
                                "type": "string"
                              }
                            }
                          },
                          "notes": {
                            "type": "array",
                            "description": "Array of notes associated with the Review, if any.",
                            "items": {
                              "properties": {
                                "note": {
                                  "description": "Content to include in the body of the note.",
                                  "type": "string"
                                },
                                "note_author_agent_email": {
                                  "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                                  "type": "string"
                                },
                                "created_at": {
                                  "description": "Unix timestamp when the note was created.",
                                  "type": "number"
                                },
                                "updated_at": {
                                  "description": "Unix timestamp when the note was last updated.",
                                  "type": "number"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entities/{entity_token}/evaluations/{evaluation_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "entity_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with entity."
        },
        {
          "in": "path",
          "name": "evaluation_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with evaluation."
        }
      ],
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Get An Evaluation",
        "description": "If you want to look up the result of a previously-run evaluation, you can use the API to get the exact same response that was returned from POST /evaluations originally. Here is the endpoint for getting that information.",
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "number"
                    },
                    "evaluation_token": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "application_token": {
                      "type": "string"
                    },
                    "application_version_id": {
                      "type": "number"
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "string"
                        },
                        "score": {
                          "type": "number"
                        },
                        "tags": {
                          "type": "array"
                        },
                        "outcome_reasons": {
                          "type": "array"
                        },
                        "outcome": {
                          "type": "string"
                        }
                      }
                    },
                    "supplied": {
                      "type": "object"
                    },
                    "formatted": {
                      "type": "object"
                    },
                    "matching": {
                      "type": "object"
                    },
                    "diligence": {
                      "type": "object"
                    },
                    "related_data": {
                      "type": "object"
                    },
                    "raw_responses": {
                      "type": "object"
                    },
                    "formatted_responses": {
                      "type": "object"
                    },
                    "audit_archive": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entities/{entity_token}/notes": {
      "parameters": [
        {
          "in": "path",
          "name": "entity_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with entity."
        }
      ],
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Add a Note for an Entity",
        "description": "Adds a note to an existing enity.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "note",
                  "note_author_agent_email"
                ],
                "properties": {
                  "note": {
                    "type": "string"
                  },
                  "note_author_agent_email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entity_token": {
                      "type": "string"
                    },
                    "external_entity_id": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "note_author_agent_email": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entities/persons": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Create a person entity",
        "description": "Creates a person entity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "external_entity_id": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "birth_date": {
                    "type": "string"
                  },
                  "name_first": {
                    "type": "string"
                  },
                  "name_middle": {
                    "type": "string"
                  },
                  "name_last": {
                    "type": "string"
                  },
                  "document_ssn": {
                    "type": "string"
                  },
                  "document_id_card": {
                    "type": "string"
                  },
                  "document_license": {
                    "type": "string"
                  },
                  "document_passport": {
                    "type": "string"
                  },
                  "addresses": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "email_address": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "phones": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "phone_number": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "pii_status": {
                    "type": "string",
                    "enum": [
                      "successful",
                      "failed",
                      "pending"
                    ]
                  }
                },
                "example": {
                  "external_entity_id": "person-entity",
                  "gender": "male",
                  "birth_date": "1998-02-03",
                  "name_first": "John",
                  "name_last": "Doe",
                  "document_ssn": "123456789",
                  "document_id_card": null,
                  "document_license": null,
                  "document_passport": null,
                  "addresses": [
                    {
                      "address_line_1": "41 E. 11th",
                      "address_city": "New York",
                      "address_state": "NY",
                      "address_postal_code": "10003",
                      "address_country_code": "US",
                      "type": "primary"
                    }
                  ],
                  "emails": [
                    {
                      "email_address": "john@alloy.com"
                    }
                  ],
                  "phones": [
                    {
                      "phone_number": "555-000-1234"
                    }
                  ],
                  "pii_status": "successful"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "x-summary": "OK",
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "external_entity_id": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string"
                    },
                    "name_first": {
                      "type": "string"
                    },
                    "name_middle": {
                      "type": "string"
                    },
                    "name_last": {
                      "type": "string"
                    },
                    "document_ssn": {
                      "type": "string"
                    },
                    "document_id_card": {
                      "type": "string"
                    },
                    "document_license": {
                      "type": "string"
                    },
                    "document_passport": {
                      "type": "string"
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "emails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email_address": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "phones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "phone_number": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "example": "person"
                    },
                    "_embedded": {
                      "type": "object"
                    },
                    "_links": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "entity_token": "P-asldkfhj",
                    "external_entity_id": "person-entity",
                    "created_at": "1652195922608",
                    "gender": "male",
                    "birth_date": null,
                    "name_first": "John",
                    "name_last": "Doe",
                    "document_ssn": null,
                    "document_id_card": null,
                    "document_license": null,
                    "document_passport": null,
                    "addresses": [
                      {
                        "address_line_1": "41 E. 11th",
                        "address_city": "New York",
                        "address_state": "NY",
                        "address_postal_code": "10003",
                        "address_country_code": "US",
                        "type": "primary"
                      }
                    ],
                    "emails": [
                      {
                        "email_address": "john@alloy.com"
                      }
                    ],
                    "phones": [
                      {
                        "phone_number": "555-000-1234"
                      }
                    ],
                    "_embedded": {
                      "document_ssns": [],
                      "birth_dates": []
                    },
                    "_links": {
                      "self": {
                        "href": "/v1/entities/persons/P-asldkfhj"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "evaluation_token": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "application_token": {
                      "type": "string"
                    },
                    "application_version_id": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status_code": 400,
                    "error": {
                      "minor_code": 4002,
                      "type": "Request Body Validation Failure",
                      "message": "Your request body contained invalid field(s)",
                      "details": {
                        "message": "\"value\" must contain at least one of [name_first, name_last]",
                        "path": "value",
                        "type": "object.missing",
                        "context": {
                          "peers": [
                            "name_first",
                            "name_last"
                          ],
                          "peersWithLabels": [
                            "name_first",
                            "name_last"
                          ],
                          "key": "value"
                        }
                      },
                      "error_token": "u82hfowjwl"
                    },
                    "timestamp": 1652205025227,
                    "evaluation_token": null,
                    "entity_token": null,
                    "application_token": "2ohfhwqoq2nm",
                    "application_version_id": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entities/persons/{entity_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "entity_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Person token associated with entity."
        }
      ],
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Get a person entity",
        "description": "Retrieves information associated with specified person entity token",
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "external_entity_id": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string"
                    },
                    "name_first": {
                      "type": "string"
                    },
                    "name_middle": {
                      "type": "string"
                    },
                    "name_last": {
                      "type": "string"
                    },
                    "document_ssn": {
                      "type": "string"
                    },
                    "document_id_card": {
                      "type": "string"
                    },
                    "document_license": {
                      "type": "string"
                    },
                    "document_passport": {
                      "type": "string"
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "emails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email_address": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "phones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "phone_number": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "example": "person"
                    },
                    "_embedded": {
                      "type": "object"
                    },
                    "_links": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "entity_token": "P-asldkfhj",
                    "external_entity_id": "person-entity",
                    "created_at": "1652195922608",
                    "gender": "male",
                    "birth_date": null,
                    "name_first": "John",
                    "name_last": "Doe",
                    "document_ssn": null,
                    "document_id_card": null,
                    "document_license": null,
                    "document_passport": null,
                    "addresses": [
                      {
                        "address_line_1": "41 E. 11th",
                        "address_city": "New York",
                        "address_state": "NY",
                        "address_postal_code": "10003",
                        "address_country_code": "US",
                        "type": "primary"
                      }
                    ],
                    "emails": [
                      {
                        "email_address": "john@alloy.com"
                      }
                    ],
                    "phones": [
                      {
                        "phone_number": "555-000-1234"
                      }
                    ],
                    "_embedded": {
                      "document_ssns": [],
                      "birth_dates": []
                    },
                    "_links": {
                      "self": {
                        "href": "/v1/entities/persons/P-asldkfhj"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "evaluation_token": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "application_token": {
                      "type": "string"
                    },
                    "application_version_id": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status_code": 400,
                    "error": {
                      "minor_code": 4013,
                      "type": "Authorization Error",
                      "message": "You are not authorized to operate on the specified object or it does not exist.",
                      "details": {
                        "entity_token_or_external_id": "provided-token"
                      },
                      "error_token": "u82hfowjwl"
                    },
                    "timestamp": 1652205025227,
                    "evaluation_token": null,
                    "entity_token": null,
                    "application_token": "2ohfhwqoq2nm",
                    "application_version_id": null
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Entities"
        ],
        "summary": "Update a person entity",
        "description": "Using a person entity token, update entity with provided information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "external_entity_id": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "birth_date": {
                    "type": "string"
                  },
                  "name_first": {
                    "type": "string"
                  },
                  "name_middle": {
                    "type": "string"
                  },
                  "name_last": {
                    "type": "string"
                  },
                  "document_ssn": {
                    "type": "string"
                  },
                  "document_id_card": {
                    "type": "string"
                  },
                  "document_license": {
                    "type": "string"
                  },
                  "document_passport": {
                    "type": "string"
                  },
                  "addresses": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "email_address": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "phones": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "phone_number": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "pii_status": {
                    "type": "string",
                    "enum": [
                      "successful",
                      "failed",
                      "pending"
                    ]
                  }
                },
                "example": {
                  "external_entity_id": "person-entity",
                  "gender": "male",
                  "birth_date": "1998-02-03",
                  "name_first": "John",
                  "name_last": "Doe",
                  "document_ssn": "123456789",
                  "document_id_card": null,
                  "document_license": null,
                  "document_passport": null,
                  "addresses": [
                    {
                      "address_line_1": "41 E. 11th",
                      "address_city": "New York",
                      "address_state": "NY",
                      "address_postal_code": "10003",
                      "address_country_code": "US",
                      "type": "primary"
                    }
                  ],
                  "emails": [
                    {
                      "email_address": "john@alloy.com"
                    }
                  ],
                  "phones": [
                    {
                      "phone_number": "555-000-1234"
                    }
                  ],
                  "pii_status": "successful"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "external_entity_id": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string"
                    },
                    "name_first": {
                      "type": "string"
                    },
                    "name_middle": {
                      "type": "string"
                    },
                    "name_last": {
                      "type": "string"
                    },
                    "document_ssn": {
                      "type": "string"
                    },
                    "document_id_card": {
                      "type": "string"
                    },
                    "document_license": {
                      "type": "string"
                    },
                    "document_passport": {
                      "type": "string"
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "emails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email_address": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "phones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "phone_number": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "example": "person"
                    },
                    "_embedded": {
                      "type": "object"
                    },
                    "_links": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "entity_token": "P-asldkfhj",
                    "external_entity_id": "person-entity",
                    "created_at": "1652195922608",
                    "gender": "male",
                    "birth_date": null,
                    "name_first": "John",
                    "name_last": "Doe",
                    "document_ssn": null,
                    "document_id_card": null,
                    "document_license": null,
                    "document_passport": null,
                    "addresses": [
                      {
                        "address_line_1": "41 E. 11th",
                        "address_city": "New York",
                        "address_state": "NY",
                        "address_postal_code": "10003",
                        "address_country_code": "US",
                        "type": "primary"
                      }
                    ],
                    "emails": [
                      {
                        "email_address": "john@alloy.com"
                      }
                    ],
                    "phones": [
                      {
                        "phone_number": "555-000-1234"
                      }
                    ],
                    "_embedded": {
                      "document_ssns": [],
                      "birth_dates": []
                    },
                    "_links": {
                      "self": {
                        "href": "/v1/entities/persons/P-asldkfhj"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/evaluations": {
      "post": {
        "summary": "Runs an evaluation",
        "description": "Given a workflow specified by the Authorization header, the API will run an evaluation with the provided payload. Alloy's API is dynamic, and thus the input parameters vary depending on which services are run and how the workflow is configured.\n",
        "tags": [
          "Evaluations"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "description": "Basic authorization header per the OAuth Client Authorization Header standard.\n\nThe format is `Basic <auth_string>`, where `<auth_string>` is the base64 encode of the string `application_token:application_secret` (the application token and application secret, separated by a colon character).\n"
            }
          },
          {
            "in": "header",
            "name": "alloy-entity-token",
            "schema": {
              "type": "string",
              "description": "If running an additional evaluation for an existing entity - the existing entity token can be provided to connect the new evaluation to the entity.\n"
            }
          },
          {
            "in": "header",
            "name": "alloy-external-entity-id",
            "schema": {
              "type": "string",
              "description": "A string to identify the entity created by the evaluation in your system.\n"
            }
          },
          {
            "in": "header",
            "name": "alloy-parent-entity-token",
            "schema": {
              "type": "string",
              "description": "A token of an entity to be used as a parent entity.\n"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Evaluation missing required inputs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "number"
                    },
                    "evaluation_token": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "application_token": {
                      "type": "string"
                    },
                    "application_version_id": {
                      "type": "number"
                    },
                    "required": {
                      "type": "array",
                      "description": "The required fields for this workflow",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "example": "name_first"
                          },
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "First name"
                          },
                          "regex": {
                            "type": "string",
                            "example": "^[^d]*$"
                          },
                          "properties": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "optional": {
                      "type": "array",
                      "description": "The optional fields for this workflow",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "example": "email_address"
                          },
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "Email address"
                          },
                          "regex": {
                            "type": "string",
                            "example": ""
                          },
                          "properties": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Evaluation created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "number"
                    },
                    "evaluation_token": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "application_token": {
                      "type": "string"
                    },
                    "application_version_id": {
                      "type": "number"
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "string"
                        },
                        "score": {
                          "type": "number"
                        },
                        "tags": {
                          "type": "array"
                        },
                        "outcome_reasons": {
                          "type": "array"
                        },
                        "outcome": {
                          "type": "string"
                        }
                      }
                    },
                    "supplied": {
                      "type": "object"
                    },
                    "formatted": {
                      "type": "object"
                    },
                    "matching": {
                      "type": "object"
                    },
                    "diligence": {
                      "type": "object"
                    },
                    "related_data": {
                      "type": "object"
                    },
                    "raw_responses": {
                      "type": "object"
                    },
                    "formatted_responses": {
                      "type": "object"
                    },
                    "audit_archive": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/parameters": {
      "get": {
        "summary": "Returns a list of required and optional inputs",
        "description": "Given a workflow specified by the Authorization header, the API returns a list of required and optional inputs for running an evaluation through the designated workflow. Alloy's API is dynamic, and thus the input parameters vary depending on which services are run and how the workflow is configured. Hitting the `GET /parameters` endpoint will show exactly what your initial `POST /evaluations` request to the Alloy API should look like. All attributes will either be always required, conditionally required, or optional. For instance, in the example here, you either have to pass `document_ssn` OR both `document_license` and `document_license_state`. Note that this response body is just an example, and the exact parameters of your workflow version will vary.\n",
        "tags": [
          "Evaluations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "required": {
                      "type": "array",
                      "description": "The required fields for this workflow",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "example": "name_first"
                          },
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "First name"
                          },
                          "regex": {
                            "type": "string",
                            "example": "^[^d]*$"
                          },
                          "properties": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "optional": {
                      "type": "array",
                      "description": "The optional fields for this workflow",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "example": "email_address"
                          },
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "Email address"
                          },
                          "regex": {
                            "type": "string",
                            "example": ""
                          },
                          "properties": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "or": {
                      "type": "array",
                      "description": "Fields that may be required for this workflow",
                      "items": {
                        "type": "object",
                        "properties": {
                          "required": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "example": "document_license"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "description": {
                                  "type": "string",
                                  "example": "US issued drivers license number"
                                },
                                "regex": {
                                  "type": "string",
                                  "example": ""
                                },
                                "properties": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/{evaluation_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "evaluation_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with evaluation.",
          "example": "L-5zKNd6TaKRoUILGAFTD6"
        }
      ],
      "get": {
        "tags": [
          "Evaluations"
        ],
        "summary": "View Evaluation",
        "responses": {
          "201": {
            "x-summary": "OK",
            "description": "Evaluation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "number"
                    },
                    "evaluation_token": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "application_token": {
                      "type": "string"
                    },
                    "application_version_id": {
                      "type": "number"
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "string"
                        },
                        "score": {
                          "type": "number"
                        },
                        "tags": {
                          "type": "array"
                        },
                        "outcome_reasons": {
                          "type": "array"
                        },
                        "outcome": {
                          "type": "string"
                        }
                      }
                    },
                    "supplied": {
                      "type": "object"
                    },
                    "formatted": {
                      "type": "object"
                    },
                    "matching": {
                      "type": "object"
                    },
                    "diligence": {
                      "type": "object"
                    },
                    "related_data": {
                      "type": "object"
                    },
                    "raw_responses": {
                      "type": "object"
                    },
                    "formatted_responses": {
                      "type": "object"
                    },
                    "audit_archive": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/final-outcomes": {
      "post": {
        "tags": [
          "Final Outcomes"
        ],
        "summary": "Archive existing and insert final outcomes",
        "description": "Add a list of final outcomes after archiving all existing final outcomes for the given customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "entity_token": {
                      "type": "string"
                    },
                    "external_entity_identifier": {
                      "type": "string"
                    },
                    "is_fraud": {
                      "type": "boolean"
                    },
                    "active_account": {
                      "type": "boolean"
                    },
                    "confidence": {
                      "type": "string",
                      "description": "Allowed values are (`\"confirmed\"`, `\"suspected\"`)"
                    },
                    "loss_amount": {
                      "type": "number",
                      "format": "double",
                      "description": "Positive decimal number"
                    },
                    "exposure": {
                      "type": "number",
                      "format": "double",
                      "description": "Positive decimal number"
                    },
                    "first_party": {
                      "type": "boolean"
                    },
                    "fraud_type": {
                      "type": "string"
                    },
                    "account_value": {
                      "type": "number",
                      "format": "double",
                      "description": "Positive decimal number"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "account_opening_date": {
                      "type": "string",
                      "description": "Must be in YYYY/MM/DD or YYYY-MM-DD format from 1900-01-01 through 2099-12-31"
                    },
                    "fraud_reported_date": {
                      "type": "string",
                      "description": "Must be in YYYY/MM/DD or YYYY-MM-DD format from 1900-01-01 through 2099-12-31"
                    },
                    "account_closure_date": {
                      "type": "string",
                      "description": "Must be in YYYY/MM/DD or YYYY-MM-DD format from 1900-01-01 through 2099-12-31"
                    }
                  },
                  "example": {
                    "entity_token": "I-DyXtV1DTODmhZZjhiGG",
                    "external_entity_identifier": 23849289549243,
                    "is_fraud": true,
                    "active_account": false,
                    "confidence": "confirmed",
                    "loss_amount": 1000000,
                    "exposure": null,
                    "first_party": true,
                    "fraud_type": "Identity theft",
                    "account_value": 12345,
                    "comment": "Very sad",
                    "account_opening_date": "2021-01-01",
                    "fraud_reported_date": "2022-01-01",
                    "account_closure_date": "2022-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully inserted final outcomes and archived previously existing final outcomes",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status_code": {
                          "type": "number"
                        },
                        "error": {
                          "type": "object"
                        },
                        "timestamp": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "records_added": {
                          "type": "integer"
                        },
                        "total_records": {
                          "type": "integer"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status_code": 201,
                  "error": null,
                  "timestamp": 1557675468774,
                  "name": "FinalOutcomes",
                  "data": {
                    "inserted_entity_final_outcomes": [
                      {
                        "entity_final_outcome_id": 111
                      }
                    ],
                    "invalid_entity_final_outcomes": []
                  },
                  "records_added": 1,
                  "total_records": 1
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Final Outcomes"
        ],
        "summary": "Append final outcomes",
        "description": "Insert a list of final outcomes while leaving the rest of the existing final outcomes intact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "entity_token": {
                      "type": "string"
                    },
                    "external_entity_identifier": {
                      "type": "string"
                    },
                    "is_fraud": {
                      "type": "boolean"
                    },
                    "active_account": {
                      "type": "boolean"
                    },
                    "confidence": {
                      "type": "string",
                      "description": "Allowed values are (`\"confirmed\"`, `\"suspected\"`)"
                    },
                    "loss_amount": {
                      "type": "number",
                      "format": "double",
                      "description": "Positive decimal number"
                    },
                    "exposure": {
                      "type": "number",
                      "format": "double",
                      "description": "Positive decimal number"
                    },
                    "first_party": {
                      "type": "boolean"
                    },
                    "fraud_type": {
                      "type": "string"
                    },
                    "account_value": {
                      "type": "number",
                      "format": "double",
                      "description": "Positive decimal number"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "account_opening_date": {
                      "type": "string",
                      "description": "Must be in YYYY/MM/DD or YYYY-MM-DD format from 1900-01-01 through 2099-12-31"
                    },
                    "fraud_reported_date": {
                      "type": "string",
                      "description": "Must be in YYYY/MM/DD or YYYY-MM-DD format from 1900-01-01 through 2099-12-31"
                    },
                    "account_closure_date": {
                      "type": "string",
                      "description": "Must be in YYYY/MM/DD or YYYY-MM-DD format from 1900-01-01 through 2099-12-31"
                    }
                  },
                  "example": {
                    "entity_token": "I-DyXtV1DTODmhZZjhiGG",
                    "external_entity_identifier": 23849289549243,
                    "is_fraud": true,
                    "active_account": false,
                    "confidence": "confirmed",
                    "loss_amount": 1000000,
                    "exposure": null,
                    "first_party": true,
                    "fraud_type": "Identity theft",
                    "account_value": 12345,
                    "comment": "Very sad",
                    "account_opening_date": "2021-01-01",
                    "fraud_reported_date": "2022-01-01",
                    "account_closure_date": "2022-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully inserted final outcomes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status_code": 201,
                  "error": null,
                  "timestamp": 1557675468774,
                  "name": "FinalOutcomes",
                  "data": {
                    "inserted_entity_final_outcomes": [
                      {
                        "entity_final_outcome_id": 111
                      }
                    ],
                    "invalid_entity_final_outcomes": [],
                    "updated_entity_final_outcomes": []
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/{entity_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "entity_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with entity."
        }
      ],
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get Information Related to a Group",
        "responses": {
          "200": {
            "description": "Get all information for a group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "meta": {
                      "type": "object"
                    },
                    "external_entity_id": {
                      "type": "string"
                    },
                    "created": {
                      "type": "number"
                    },
                    "identity_details": {
                      "type": "object"
                    },
                    "evaluations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "evaluation_token": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "status": {
                            "type": "string"
                          },
                          "application_name": {
                            "type": "string"
                          },
                          "outcome": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "document_token": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "reviews": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "review_token": {
                            "description": "Unique ID for the Review.",
                            "type": "string"
                          },
                          "entity_token": {
                            "description": "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.",
                            "type": "string"
                          },
                          "group_token": {
                            "description": "Unique ID for the Group (of Entities) associated with the Review.",
                            "type": "string"
                          },
                          "application_token": {
                            "description": "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.",
                            "type": "string"
                          },
                          "outcome": {
                            "description": "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.",
                            "type": "string"
                          },
                          "application_name": {
                            "description": "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.",
                            "type": "string"
                          },
                          "reviewer": {
                            "description": "Email of the Agent that created the Review.",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "Unix timestamp when the Review was created.",
                            "type": "number"
                          },
                          "reasons": {
                            "type": "array",
                            "description": "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "agent": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "description": "Valid email of agent with Alloy account access.",
                                "type": "string"
                              },
                              "external_id": {
                                "description": "Unique external ID associated with the Agent, if any.",
                                "type": "string"
                              }
                            }
                          },
                          "notes": {
                            "type": "array",
                            "description": "Array of notes associated with the Review, if any.",
                            "items": {
                              "properties": {
                                "note": {
                                  "description": "Content to include in the body of the note.",
                                  "type": "string"
                                },
                                "note_author_agent_email": {
                                  "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                                  "type": "string"
                                },
                                "created_at": {
                                  "description": "Unix timestamp when the note was created.",
                                  "type": "number"
                                },
                                "updated_at": {
                                  "description": "Unix timestamp when the note was last updated.",
                                  "type": "number"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "child_entities": {
                      "type": "array",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "entity_token": {
                          "type": "string"
                        },
                        "archived": {
                          "type": "boolean"
                        },
                        "created": {
                          "type": "number"
                        },
                        "evaluations": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "evaluation_token": {
                                "type": "string"
                              },
                              "timestamp": {
                                "type": "number"
                              },
                              "status": {
                                "type": "string"
                              },
                              "application_name": {
                                "type": "string"
                              },
                              "outcome": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "documents": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "document_token": {
                                "type": "string"
                              },
                              "timestamp": {
                                "type": "number"
                              },
                              "type": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "reviews": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "review_token": {
                                "description": "Unique ID for the Review.",
                                "type": "string"
                              },
                              "entity_token": {
                                "description": "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.",
                                "type": "string"
                              },
                              "group_token": {
                                "description": "Unique ID for the Group (of Entities) associated with the Review.",
                                "type": "string"
                              },
                              "application_token": {
                                "description": "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.",
                                "type": "string"
                              },
                              "outcome": {
                                "description": "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.",
                                "type": "string"
                              },
                              "application_name": {
                                "description": "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.",
                                "type": "string"
                              },
                              "reviewer": {
                                "description": "Email of the Agent that created the Review.",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Unix timestamp when the Review was created.",
                                "type": "number"
                              },
                              "reasons": {
                                "type": "array",
                                "description": "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "agent": {
                                "type": "object",
                                "properties": {
                                  "email": {
                                    "description": "Valid email of agent with Alloy account access.",
                                    "type": "string"
                                  },
                                  "external_id": {
                                    "description": "Unique external ID associated with the Agent, if any.",
                                    "type": "string"
                                  }
                                }
                              },
                              "notes": {
                                "type": "array",
                                "description": "Array of notes associated with the Review, if any.",
                                "items": {
                                  "properties": {
                                    "note": {
                                      "description": "Content to include in the body of the note.",
                                      "type": "string"
                                    },
                                    "note_author_agent_email": {
                                      "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                                      "type": "string"
                                    },
                                    "created_at": {
                                      "description": "Unix timestamp when the note was created.",
                                      "type": "number"
                                    },
                                    "updated_at": {
                                      "description": "Unix timestamp when the note was last updated.",
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/{groupToken}/evaluation": {
      "parameters": [
        {
          "in": "path",
          "name": "groupToken",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with group."
        }
      ],
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Post a Group Evaluation",
        "description": "Given a workflow with a Group Service, this endpoint can evaluate a group of entities with this endpoint.",
        "responses": {
          "200": {
            "description": "Group Evaluation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "number"
                    },
                    "evaluation_token": {
                      "type": "string"
                    },
                    "entity_token": {
                      "type": "string"
                    },
                    "application_token": {
                      "type": "string"
                    },
                    "application_version_id": {
                      "type": "number"
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "string"
                        },
                        "score": {
                          "type": "number"
                        },
                        "tags": {
                          "type": "array"
                        },
                        "outcome_reasons": {
                          "type": "array"
                        },
                        "outcome": {
                          "type": "string"
                        }
                      }
                    },
                    "supplied": {
                      "type": "object"
                    },
                    "formatted": {
                      "type": "object"
                    },
                    "matching": {
                      "type": "object"
                    },
                    "diligence": {
                      "type": "object"
                    },
                    "related_data": {
                      "type": "object"
                    },
                    "raw_responses": {
                      "type": "object"
                    },
                    "formatted_responses": {
                      "type": "object"
                    },
                    "audit_archive": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/{groupToken}/notes": {
      "parameters": [
        {
          "in": "path",
          "name": "groupToken",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with group."
        }
      ],
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Add note to a group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note_author_agent_email": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group Notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document_token": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "note_author_agent_email": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journeys/{journey_token}/applications": {
      "parameters": [
        {
          "in": "path",
          "name": "journey_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with your Journey",
          "example": "J-XXwlkEwOcdxQXbbBxoaO"
        },
        {
          "in": "header",
          "name": "alloy-journey-override-sync",
          "schema": {
            "type": "boolean",
            "description": "We return a synchronous response by default. To get a response back immediately, send the header `alloy-journey-override-sync` as `true`.\n",
            "example": false
          }
        },
        {
          "in": "query",
          "name": "fullData",
          "description": "If this value is `true`, each event of type `completed_evaluation` in the array at `response._embedded_events` includes the full evaluation response.",
          "schema": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ]
          }
        },
        {
          "in": "header",
          "name": "alloy-journey-version",
          "schema": {
            "type": "number",
            "description": "Specifies the journey version to create an application from.\nThis includes drafts and inactive versions.\nIf not supplied, the active journey version will be used.\n",
            "example": 1
          }
        }
      ],
      "post": {
        "tags": [
          "Journeys"
        ],
        "summary": "Create Journey Application",
        "description": "Create a journey application for one or more entities.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "entities"
                ],
                "properties": {
                  "entities": {
                    "type": "array",
                    "description": "List of entities to be processed in this Application.\n",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "external_entity_id": {
                              "example": "my_system_entity_id_123",
                              "type": "string",
                              "description": "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n"
                            },
                            "data": {
                              "type": "object",
                              "description": "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n",
                              "required": [
                                "name_first",
                                "name_last"
                              ],
                              "properties": {
                                "address_line_1": {
                                  "type": "string",
                                  "example": "41 E. 11th"
                                },
                                "address_line_2": {
                                  "type": "string",
                                  "example": "2nd floor"
                                },
                                "address_city": {
                                  "type": "string",
                                  "example": "New York"
                                },
                                "address_state": {
                                  "type": "string",
                                  "example": "NY"
                                },
                                "address_postal_code": {
                                  "type": "string",
                                  "example": 10003
                                },
                                "address_country_code": {
                                  "type": "string",
                                  "example": "US"
                                },
                                "birth_date": {
                                  "type": "string",
                                  "example": "1990-01-25"
                                },
                                "document_ssn": {
                                  "type": "string",
                                  "description": "Social Security number",
                                  "example": 111223333
                                },
                                "document_id_card": {
                                  "type": "string",
                                  "description": "ID card number",
                                  "example": 1122334455
                                },
                                "document_license": {
                                  "type": "string",
                                  "description": "U.S. issued driver's license number",
                                  "example": 111222333
                                },
                                "document_passport": {
                                  "type": "string",
                                  "description": "Passport number",
                                  "example": 123456789
                                },
                                "email_address": {
                                  "type": "string",
                                  "example": "john@alloy.com"
                                },
                                "gender": {
                                  "type": "string",
                                  "example": "male"
                                },
                                "name_first": {
                                  "type": "string",
                                  "example": "John"
                                },
                                "name_middle": {
                                  "type": "string",
                                  "example": "Franklin"
                                },
                                "name_last": {
                                  "type": "string",
                                  "example": "Doe"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "example": 8443825569
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "entity_type": {
                              "example": "person",
                              "default": "person",
                              "type": "string",
                              "enum": [
                                "person",
                                "business"
                              ],
                              "description": "If left blank, defaults to `\"person\"`."
                            },
                            "branch_name": {
                              "example": "my_branch_name",
                              "default": "persons",
                              "type": "string",
                              "description": "This value is required for journeys with multiple branches. It must match a journey branch configured from the start node. It is used to determine\nwhich steps the entity will be required to complete.\n"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "external_group_id": {
                    "type": "string",
                    "description": "Optional, but if you have an identifier in your system that represents the entire Application \n(meaning, all the person or persons applying for this product), include it here. This identifier must be unique.\n",
                    "example": "my_system_group_id_456"
                  },
                  "external_product_id": {
                    "type": "string",
                    "description": "Optional, but if you have an identifier in your system for the product that this \napplication is applying for, include it here.\n",
                    "example": "my_system_product_id_789"
                  },
                  "do_await_additional_entities": {
                    "type": "boolean",
                    "default": false,
                    "example": true,
                    "description": "If this value is true, additional entities can be sent after this request by using the PUT endpoint that updates a journey application.\n\nThe journey application will not complete until the parameter `has_finished_sending_additional_entities` is sent with the value `true` to the PUT endpoint.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "title": "When header `alloy-journey-override-sync` is set to `true`"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "journey_application_token": {
                              "type": "string",
                              "example": "JA-LS0GHKjDNhY6dGlvYxxH"
                            },
                            "_links": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "example": "/v1/journeys/J-Kq8jlFcA4veeHCtt823h/applications/JA-LS0GHKjDNhY6dGlvYxxH",
                                      "description": "GET route for the Application"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "title": "When header `alloy-journey-override-sync` is set to `false` or not passed in"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "journey_application_token": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "sandbox": {
                              "type": "boolean"
                            },
                            "created_at": {
                              "type": "integer"
                            },
                            "updated_at": {
                              "type": "integer"
                            },
                            "closed_at": {
                              "type": "integer"
                            },
                            "complete_outcome": {
                              "type": "string"
                            },
                            "journey_application_status": {
                              "description": "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.",
                              "type": "string"
                            },
                            "is_archived": {
                              "type": "boolean"
                            },
                            "archived_at": {
                              "type": "string"
                            },
                            "_embedded": {
                              "type": "object",
                              "properties": {
                                "events": {
                                  "description": "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "journey_application_event_token": {
                                        "type": "string"
                                      },
                                      "journey_application_token": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "completed_action",
                                          "completed_application",
                                          "completed_branch",
                                          "completed_evaluation",
                                          "completed_reconciliation",
                                          "completed_review",
                                          "data_request_evaluation",
                                          "error",
                                          "has_finished_sending_additional_entities",
                                          "pending_action_expired",
                                          "pending_action",
                                          "pending_documents",
                                          "pending_evaluation",
                                          "pending_review",
                                          "started_application",
                                          "started_evaluation"
                                        ]
                                      },
                                      "timestamp": {
                                        "type": "integer"
                                      },
                                      "entity_token": {
                                        "type": "string"
                                      },
                                      "entity_application_token": {
                                        "type": "string"
                                      },
                                      "evaluation_token": {
                                        "type": "string",
                                        "description": "Identifying evaluation token (only in evaluation type events)"
                                      },
                                      "_embedded": {
                                        "type": "object",
                                        "properties": {
                                          "node": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "start",
                                                  "workflow",
                                                  "review",
                                                  "outcome",
                                                  "action",
                                                  "docv"
                                                ]
                                              },
                                              "config": {
                                                "description": "Config related to the specific node, depending on the type",
                                                "type": "object"
                                              },
                                              "workflow_name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "_links": {
                                        "type": "object",
                                        "properties": {
                                          "evaluation": {
                                            "type": "object",
                                            "properties": {
                                              "href": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "case": {
                                            "type": "object",
                                            "properties": {
                                              "href": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "sdk_config": {
                                        "type": "object",
                                        "description": "Settings to be read by SDK to handle processing. Only present on workflow node events.",
                                        "properties": {
                                          "documents": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "selfie": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "outcome": {
                                        "type": "string",
                                        "description": "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`"
                                      }
                                    }
                                  }
                                },
                                "journey": {
                                  "type": "object",
                                  "properties": {
                                    "journey_name": {
                                      "type": "string"
                                    },
                                    "journey_token": {
                                      "type": "string"
                                    },
                                    "journey_version_num": {
                                      "type": "string"
                                    },
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "GET route for the Journey"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "child_entities": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "external_entity_identifier": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "token": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "entity_application_token": {
                                        "type": "string"
                                      },
                                      "entity_application_status": {
                                        "type": "string"
                                      },
                                      "entity_application_outcome": {
                                        "type": "string"
                                      },
                                      "created": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "entity_applications": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "entity_token": {
                                        "type": "string"
                                      },
                                      "entity_application_token": {
                                        "type": "string"
                                      },
                                      "entity_application_outcome": {
                                        "type": "string"
                                      },
                                      "entity_application_status": {
                                        "type": "string"
                                      },
                                      "entity_application_status_details": {
                                        "type": "object",
                                        "description": "Additional details for applications that have status `data_request`",
                                        "properties": {
                                          "required": {
                                            "type": "string"
                                          },
                                          "or": {
                                            "type": "string"
                                          },
                                          "optional": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "output": {
                                        "type": "object",
                                        "description": "data aggregated from the outputs of every evaluation run for the entity application",
                                        "properties": {
                                          "outcome_reasons": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "adverse_action",
                                                    null
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "output_attributes": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ],
                                              "description": "NOTE the dynamic property name refers to the name of the output attribute"
                                            }
                                          },
                                          "matrix_models": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "object",
                                              "description": "NOTE the dynamic property name refers to the name of the matrix model",
                                              "properties": {
                                                "matrix_model_public_version": {
                                                  "type": "integer"
                                                },
                                                "matrix_model_token": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "result": {
                                                  "type": "number",
                                                  "nullable": true
                                                },
                                                "status": {
                                                  "type": "string",
                                                  "enum": [
                                                    "executed",
                                                    "not_executed"
                                                  ]
                                                },
                                                "x_bucket": {
                                                  "type": "number",
                                                  "nullable": true,
                                                  "description": "x-coordinate of the matrix"
                                                },
                                                "x_value": {
                                                  "type": "number",
                                                  "nullable": true
                                                },
                                                "y_bucket": {
                                                  "type": "number",
                                                  "nullable": true,
                                                  "description": "y-coordinate of the matrix"
                                                },
                                                "y_value": {
                                                  "type": "number",
                                                  "nullable": true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "entity": {
                                  "description": "The journey application entity",
                                  "type": "object",
                                  "properties": {
                                    "external_entity_identifier": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "token": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "_links": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "description": "GET route for the Application",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "example": {
                            "journey_application_token": "JA-ddjP31DhduTI334Cs3uT",
                            "credit_limit": "42",
                            "annual_interest_rate": "70",
                            "status": "completed",
                            "sandbox": false,
                            "created_at": 1634059958368,
                            "updated_at": 1634059961458,
                            "closed_at": 1634059961464,
                            "recent_outcome": "Approved",
                            "complete_outcome": "Approved",
                            "_embedded": {
                              "events": [
                                {
                                  "type": "started_application",
                                  "timestamp": 1634059958414,
                                  "entity_token": null,
                                  "_embedded": {
                                    "node": {
                                      "name": null,
                                      "id": "1632850505316",
                                      "type": "workflow",
                                      "config": {
                                        "workflow_token": "vUr2Fs1y8Qiz1a79kNJk1dk7EfYUAJRK",
                                        "workflow_version_id": 1
                                      }
                                    }
                                  },
                                  "_links": {}
                                },
                                {
                                  "type": "started_evaluation",
                                  "timestamp": 1634059958531,
                                  "evaluation_token": "L-Vn9uOp0ZyYvjDL1t3Sd7",
                                  "entity_token": null,
                                  "_embedded": {
                                    "node": {
                                      "name": null,
                                      "id": "1632850505316",
                                      "type": "workflow",
                                      "config": {
                                        "workflow_token": "vUr2Fs1y8Qiz1a79kNJk1dk7EfYUAJRK",
                                        "workflow_version_id": 1
                                      }
                                    }
                                  },
                                  "_links": {
                                    "evaluation": {
                                      "href": "/v1/evaluations/L-Vn9uOp0ZyYvjDL1t3Sd7"
                                    }
                                  },
                                  "sdk_config": {
                                    "documents": [
                                      "passport"
                                    ],
                                    "selfie": true
                                  }
                                },
                                {
                                  "type": "completed_evaluation",
                                  "timestamp": 1634059960557,
                                  "outcome": "Approved",
                                  "evaluation_token": "L-Vn9uOp0ZyYvjDL1t3Sd7",
                                  "entity_token": "P-tZOLIOQGVxfixICuvkS0",
                                  "_embedded": {
                                    "node": {
                                      "name": null,
                                      "id": "1632850505316",
                                      "type": "workflow",
                                      "config": {
                                        "workflow_token": "vUr2Fs1y8Qiz1a79kNJk1dk7EfYUAJRK",
                                        "workflow_version_id": 1
                                      }
                                    }
                                  },
                                  "_links": {
                                    "evaluation": {
                                      "href": "/v1/evaluations/L-Vn9uOp0ZyYvjDL1t3Sd7"
                                    }
                                  }
                                },
                                {
                                  "type": "completed_application",
                                  "timestamp": 1634059961453,
                                  "outcome": "Approved",
                                  "entity_token": "P-tZOLIOQGVxfixICuvkS0",
                                  "_embedded": {
                                    "node": {
                                      "name": null,
                                      "id": "1633639581306",
                                      "type": "outcome",
                                      "config": {
                                        "outcome": "Approved"
                                      }
                                    }
                                  },
                                  "_links": {}
                                }
                              ],
                              "journey": {
                                "journey_name": "",
                                "journey_token": "J-qDydegaMK8otdsRYquOR",
                                "_links": {
                                  "self": {
                                    "href": "/v1/journeys/J-qDydegaMK8otdsRYquOR"
                                  }
                                }
                              },
                              "child_entities": [
                                {
                                  "external_entity_identifier": "external_entity_id123",
                                  "name": "John Doe",
                                  "token": "P-tZOLIOQGVxfixICuvkS0",
                                  "type": "person",
                                  "entity_application_token": "EA-GessHRonFRTSXCmErk7J",
                                  "entity_application_status": "completed",
                                  "entity_application_outcome": "approved",
                                  "created": "2021-10-12T20:38:26.493Z"
                                }
                              ],
                              "entity_applications": [
                                {
                                  "entity_token": "P-tZOLIOQGVxfixICuvkS0",
                                  "entity_application_token": "EA-GessHRonFRTSXCmErk7J",
                                  "entity_application_outcome": "approved",
                                  "entity_application_status": "completed",
                                  "entity_application_status_details": null,
                                  "output": {
                                    "outcome_reasons": [
                                      {
                                        "name": "Fraud Risk",
                                        "type": null
                                      }
                                    ],
                                    "output_attributes": {
                                      "income_calculation": 98000
                                    },
                                    "matrix_models": {
                                      "my_matrix": {
                                        "matrix_model_public_version": 5,
                                        "matrix_model_token": "MM-Z37VkZwHMbnzhLJM7ZlX",
                                        "name": "my_matrix",
                                        "result": 15,
                                        "status": "executed",
                                        "x_bucket": 1,
                                        "x_value": 1000,
                                        "y_bucket": 0,
                                        "y_value": 300
                                      }
                                    }
                                  }
                                }
                              ],
                              "entity": {
                                "external_entity_identifier": null,
                                "name": null,
                                "token": "G-wBdsvC7hA84j7p4PTVcD",
                                "type": "group"
                              }
                            },
                            "_links": {
                              "self": {
                                "href": "/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/journeys/{journey_token}/applications/{application_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "journey_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with your Journey",
          "example": "J-XXwlkEwOcdxQXbbBxoaO"
        },
        {
          "in": "path",
          "name": "application_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with your Application",
          "example": "JA-mhjlfS6nZe1G6HuvAKVq"
        },
        {
          "in": "query",
          "name": "fullData",
          "description": "If this value is `true`, each event of type `completed_evaluation` in the array at `response._embedded_events` includes the full evaluation response.",
          "schema": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ]
          }
        }
      ],
      "put": {
        "parameters": [
          {
            "in": "header",
            "name": "alloy-journey-override-sync",
            "schema": {
              "type": "boolean",
              "description": "We return a synchronous response by default. To get a response back immediately, send the header `alloy-journey-override-sync` as `true`.\n",
              "example": false
            }
          }
        ],
        "tags": [
          "Journeys"
        ],
        "summary": "Update Journey Application",
        "description": "This endpoint has 3 different use cases:\n\n  * Send the additional or updated data required to advance the application.\n    * Only available if one or more entity applications have the statuses `pending_documents` or `data_request`. \n  * Send new, additional entities to be processed.\n    * Only available if the parameter `do_await_additional_entities` was set to `true` in the POST request to create the journey application.\n  * Inform the system that the user has finished sending all additional entities by passing the parameter `has_finished_sending_additional_entities` with value `true`.\n    * Only available if the parameter `do_await_additional_entities` was set to `true` in the POST request to create the journey application.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "has_finished_sending_additional_entities": {
                    "type": "boolean",
                    "description": "If the parameter `do_await_additional_entities` was set to `true` in the POST request to create the journey application, sending this value as `true` informs the system that all additional entities have been sent in.\n"
                  },
                  "entities": {
                    "type": "array",
                    "description": "List of entities that can refer either of the following, or a mix of both:           \n  * Option 1: existing entities whose data needs to be updated or modified           \n    * This option is valid in the case where the entity's application status is `pending_documents` or `data_request`.          \n    * For multi-entity applications, the entity application must be identified by using at least one of the following parameters: `external_entity_id`, `entity_application_token`, `entity_token`. See those parameters' descriptions for more detail.          \n    * For single entity applications, no entity identifier is necessary.\n    * The data in the field `data` is recursively merged with the existing data object for the entity (i.e., the data passed in the POST request and the previous requests to this endpoint, if any).\n  * Option 2: new entities           \n    * This option is valid in the case where the parameter `do_await_additional_entities` was set to `true` in the POST request to create the journey application.          \n    * The parameters for this option are exactly the same as the `entity` object in the POST request to create the journey application.          \n",
                    "items": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "type": "object"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "entity_token": {
                                  "example": "P-w34k2W324cfgo53ZqX",
                                  "type": "string",
                                  "description": "Unique identifier used in Alloy's systems to specify a particular entity to edit. Must match entity from Application.\nBy default, identifying an entity with this field selects the entity's **active** entity application.\n"
                                },
                                "external_entity_id": {
                                  "example": "my_system_entity_id_123",
                                  "type": "string",
                                  "description": "For existing entities that were created with external_entity_id, this can be used to identify and edit the entity's ACTIVE entity\napplication.\n"
                                },
                                "entity_application_token": {
                                  "example": "EA-0923jfss093ioawo",
                                  "type": "string",
                                  "description": "Can be used to identify and edit a specific entity application of an existing entity\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "data"
                              ],
                              "properties": {
                                "external_entity_id": {
                                  "example": "my_system_entity_id_123",
                                  "type": "string",
                                  "description": "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n"
                                },
                                "data": {
                                  "type": "object",
                                  "description": "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n",
                                  "required": [
                                    "name_first",
                                    "name_last"
                                  ],
                                  "properties": {
                                    "address_line_1": {
                                      "type": "string",
                                      "example": "41 E. 11th"
                                    },
                                    "address_line_2": {
                                      "type": "string",
                                      "example": "2nd floor"
                                    },
                                    "address_city": {
                                      "type": "string",
                                      "example": "New York"
                                    },
                                    "address_state": {
                                      "type": "string",
                                      "example": "NY"
                                    },
                                    "address_postal_code": {
                                      "type": "string",
                                      "example": 10003
                                    },
                                    "address_country_code": {
                                      "type": "string",
                                      "example": "US"
                                    },
                                    "birth_date": {
                                      "type": "string",
                                      "example": "1990-01-25"
                                    },
                                    "document_ssn": {
                                      "type": "string",
                                      "description": "Social Security number",
                                      "example": 111223333
                                    },
                                    "document_id_card": {
                                      "type": "string",
                                      "description": "ID card number",
                                      "example": 1122334455
                                    },
                                    "document_license": {
                                      "type": "string",
                                      "description": "U.S. issued driver's license number",
                                      "example": 111222333
                                    },
                                    "document_passport": {
                                      "type": "string",
                                      "description": "Passport number",
                                      "example": 123456789
                                    },
                                    "email_address": {
                                      "type": "string",
                                      "example": "john@alloy.com"
                                    },
                                    "gender": {
                                      "type": "string",
                                      "example": "male"
                                    },
                                    "name_first": {
                                      "type": "string",
                                      "example": "John"
                                    },
                                    "name_middle": {
                                      "type": "string",
                                      "example": "Franklin"
                                    },
                                    "name_last": {
                                      "type": "string",
                                      "example": "Doe"
                                    },
                                    "phone_number": {
                                      "type": "string",
                                      "example": 8443825569
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "data"
                              ],
                              "properties": {
                                "external_entity_id": {
                                  "example": "my_system_entity_id_123",
                                  "type": "string",
                                  "description": "The value used on client's own system to identify the entity.\n\nIf an entity associated with the value passed in already exists, then the entity application processes for that entity. Otherwise, a new entity is created and associated with the value passed in.\n\nThis parameter is optional, but strongly encouraged.\n"
                                },
                                "data": {
                                  "type": "object",
                                  "description": "Contains the fields for each input attribute of each workflow in the journey that is expected to be processed for the entity.\n",
                                  "required": [
                                    "name_first",
                                    "name_last"
                                  ],
                                  "properties": {
                                    "address_line_1": {
                                      "type": "string",
                                      "example": "41 E. 11th"
                                    },
                                    "address_line_2": {
                                      "type": "string",
                                      "example": "2nd floor"
                                    },
                                    "address_city": {
                                      "type": "string",
                                      "example": "New York"
                                    },
                                    "address_state": {
                                      "type": "string",
                                      "example": "NY"
                                    },
                                    "address_postal_code": {
                                      "type": "string",
                                      "example": 10003
                                    },
                                    "address_country_code": {
                                      "type": "string",
                                      "example": "US"
                                    },
                                    "birth_date": {
                                      "type": "string",
                                      "example": "1990-01-25"
                                    },
                                    "document_ssn": {
                                      "type": "string",
                                      "description": "Social Security number",
                                      "example": 111223333
                                    },
                                    "document_id_card": {
                                      "type": "string",
                                      "description": "ID card number",
                                      "example": 1122334455
                                    },
                                    "document_license": {
                                      "type": "string",
                                      "description": "U.S. issued driver's license number",
                                      "example": 111222333
                                    },
                                    "document_passport": {
                                      "type": "string",
                                      "description": "Passport number",
                                      "example": 123456789
                                    },
                                    "email_address": {
                                      "type": "string",
                                      "example": "john@alloy.com"
                                    },
                                    "gender": {
                                      "type": "string",
                                      "example": "male"
                                    },
                                    "name_first": {
                                      "type": "string",
                                      "example": "John"
                                    },
                                    "name_middle": {
                                      "type": "string",
                                      "example": "Franklin"
                                    },
                                    "name_last": {
                                      "type": "string",
                                      "example": "Doe"
                                    },
                                    "phone_number": {
                                      "type": "string",
                                      "example": 8443825569
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "entity_type": {
                                  "example": "person",
                                  "default": "person",
                                  "type": "string",
                                  "enum": [
                                    "person",
                                    "business"
                                  ],
                                  "description": "If left blank, defaults to `\"person\"`."
                                },
                                "branch_name": {
                                  "example": "my_branch_name",
                                  "default": "persons",
                                  "type": "string",
                                  "description": "This value is required for journeys with multiple branches. It must match a journey branch configured from the start node. It is used to determine\nwhich steps the entity will be required to complete.\n"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "entity_token": {
                                  "example": "P-w34k2W324cfgo53ZqX",
                                  "type": "string",
                                  "description": "Unique identifier used in Alloy's systems to specify a particular entity to edit. Must match entity from Application.\nBy default, identifying an entity with this field selects the entity's **active** entity application.\n"
                                },
                                "external_entity_id": {
                                  "example": "my_system_entity_id_123",
                                  "type": "string",
                                  "description": "For existing entities that were created with external_entity_id, this can be used to identify and edit the entity's ACTIVE entity\napplication.\n"
                                },
                                "entity_application_token": {
                                  "example": "EA-0923jfss093ioawo",
                                  "type": "string",
                                  "description": "Can be used to identify and edit a specific entity application of an existing entity\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "data"
                              ],
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "description": "Properties of documents sent for a `pending_documents` step. The documents must be uploaded in a seperate request and then associated with the entity in this request. You may either use our SDK ([see here](https://developer.alloy.com/public/docs/_sdk)) or our API ([see here](https://developer.alloy.com/public/reference/put_entities-entity-token-documents-document-token-1)) to upload documents.",
                                  "properties": {
                                    "document_token_selfie": {
                                      "type": "string",
                                      "description": "The document token for the previously uploaded selfie",
                                      "example": "D-zzniuGvvvhkrGo0nUMcO"
                                    },
                                    "document_token_back": {
                                      "type": "string",
                                      "description": "The document token for the back of the previously uploaded image",
                                      "example": "D-zzniuGvvvhkrGo0nUMcO"
                                    },
                                    "document_token_front": {
                                      "type": "string",
                                      "description": "The document token for the front of a previously uploaded image",
                                      "example": "D-zzniuGvvvhkrGo0nUMcO"
                                    },
                                    "document_step": {
                                      "type": "string",
                                      "description": "For journeys, the value should always be `final`. This will tell us to evaluate the document. If `front` or `back` is passed in, then only the quality of the corresponding image will be examined.",
                                      "enum": [
                                        "front",
                                        "back",
                                        "final"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "title": "When header `alloy-journey-override-sync` is set to `true`"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "journey_application_token": {
                              "type": "string",
                              "example": "JA-LS0GHKjDNhY6dGlvYxxH"
                            },
                            "_links": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "example": "/v1/journeys/J-Kq8jlFcA4veeHCtt823h/applications/JA-LS0GHKjDNhY6dGlvYxxH",
                                      "description": "GET route for the Application"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "title": "When header `alloy-journey-override-sync` is set to `false` or not passed in"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "journey_application_token": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "sandbox": {
                              "type": "boolean"
                            },
                            "created_at": {
                              "type": "integer"
                            },
                            "updated_at": {
                              "type": "integer"
                            },
                            "closed_at": {
                              "type": "integer"
                            },
                            "complete_outcome": {
                              "type": "string"
                            },
                            "journey_application_status": {
                              "description": "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.",
                              "type": "string"
                            },
                            "is_archived": {
                              "type": "boolean"
                            },
                            "archived_at": {
                              "type": "string"
                            },
                            "_embedded": {
                              "type": "object",
                              "properties": {
                                "events": {
                                  "description": "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "journey_application_event_token": {
                                        "type": "string"
                                      },
                                      "journey_application_token": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "completed_action",
                                          "completed_application",
                                          "completed_branch",
                                          "completed_evaluation",
                                          "completed_reconciliation",
                                          "completed_review",
                                          "data_request_evaluation",
                                          "error",
                                          "has_finished_sending_additional_entities",
                                          "pending_action_expired",
                                          "pending_action",
                                          "pending_documents",
                                          "pending_evaluation",
                                          "pending_review",
                                          "started_application",
                                          "started_evaluation"
                                        ]
                                      },
                                      "timestamp": {
                                        "type": "integer"
                                      },
                                      "entity_token": {
                                        "type": "string"
                                      },
                                      "entity_application_token": {
                                        "type": "string"
                                      },
                                      "evaluation_token": {
                                        "type": "string",
                                        "description": "Identifying evaluation token (only in evaluation type events)"
                                      },
                                      "_embedded": {
                                        "type": "object",
                                        "properties": {
                                          "node": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "start",
                                                  "workflow",
                                                  "review",
                                                  "outcome",
                                                  "action",
                                                  "docv"
                                                ]
                                              },
                                              "config": {
                                                "description": "Config related to the specific node, depending on the type",
                                                "type": "object"
                                              },
                                              "workflow_name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "_links": {
                                        "type": "object",
                                        "properties": {
                                          "evaluation": {
                                            "type": "object",
                                            "properties": {
                                              "href": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "case": {
                                            "type": "object",
                                            "properties": {
                                              "href": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "sdk_config": {
                                        "type": "object",
                                        "description": "Settings to be read by SDK to handle processing. Only present on workflow node events.",
                                        "properties": {
                                          "documents": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "selfie": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "outcome": {
                                        "type": "string",
                                        "description": "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`"
                                      }
                                    }
                                  }
                                },
                                "journey": {
                                  "type": "object",
                                  "properties": {
                                    "journey_name": {
                                      "type": "string"
                                    },
                                    "journey_token": {
                                      "type": "string"
                                    },
                                    "journey_version_num": {
                                      "type": "string"
                                    },
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "GET route for the Journey"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "child_entities": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "external_entity_identifier": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "token": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "entity_application_token": {
                                        "type": "string"
                                      },
                                      "entity_application_status": {
                                        "type": "string"
                                      },
                                      "entity_application_outcome": {
                                        "type": "string"
                                      },
                                      "created": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "entity_applications": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "entity_token": {
                                        "type": "string"
                                      },
                                      "entity_application_token": {
                                        "type": "string"
                                      },
                                      "entity_application_outcome": {
                                        "type": "string"
                                      },
                                      "entity_application_status": {
                                        "type": "string"
                                      },
                                      "entity_application_status_details": {
                                        "type": "object",
                                        "description": "Additional details for applications that have status `data_request`",
                                        "properties": {
                                          "required": {
                                            "type": "string"
                                          },
                                          "or": {
                                            "type": "string"
                                          },
                                          "optional": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "output": {
                                        "type": "object",
                                        "description": "data aggregated from the outputs of every evaluation run for the entity application",
                                        "properties": {
                                          "outcome_reasons": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "adverse_action",
                                                    null
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "output_attributes": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ],
                                              "description": "NOTE the dynamic property name refers to the name of the output attribute"
                                            }
                                          },
                                          "matrix_models": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "object",
                                              "description": "NOTE the dynamic property name refers to the name of the matrix model",
                                              "properties": {
                                                "matrix_model_public_version": {
                                                  "type": "integer"
                                                },
                                                "matrix_model_token": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "result": {
                                                  "type": "number",
                                                  "nullable": true
                                                },
                                                "status": {
                                                  "type": "string",
                                                  "enum": [
                                                    "executed",
                                                    "not_executed"
                                                  ]
                                                },
                                                "x_bucket": {
                                                  "type": "number",
                                                  "nullable": true,
                                                  "description": "x-coordinate of the matrix"
                                                },
                                                "x_value": {
                                                  "type": "number",
                                                  "nullable": true
                                                },
                                                "y_bucket": {
                                                  "type": "number",
                                                  "nullable": true,
                                                  "description": "y-coordinate of the matrix"
                                                },
                                                "y_value": {
                                                  "type": "number",
                                                  "nullable": true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "entity": {
                                  "description": "The journey application entity",
                                  "type": "object",
                                  "properties": {
                                    "external_entity_identifier": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "token": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "_links": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "description": "GET route for the Application",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "example": {
                            "journey_application_token": "JA-ddjP31DhduTI334Cs3uT",
                            "credit_limit": "42",
                            "annual_interest_rate": "70",
                            "status": "completed",
                            "sandbox": false,
                            "created_at": 1634059958368,
                            "updated_at": 1634059961458,
                            "closed_at": 1634059961464,
                            "recent_outcome": "Approved",
                            "complete_outcome": "Approved",
                            "_embedded": {
                              "events": [
                                {
                                  "type": "started_application",
                                  "timestamp": 1634059958414,
                                  "entity_token": null,
                                  "_embedded": {
                                    "node": {
                                      "name": null,
                                      "id": "1632850505316",
                                      "type": "workflow",
                                      "config": {
                                        "workflow_token": "vUr2Fs1y8Qiz1a79kNJk1dk7EfYUAJRK",
                                        "workflow_version_id": 1
                                      }
                                    }
                                  },
                                  "_links": {}
                                },
                                {
                                  "type": "started_evaluation",
                                  "timestamp": 1634059958531,
                                  "evaluation_token": "L-Vn9uOp0ZyYvjDL1t3Sd7",
                                  "entity_token": null,
                                  "_embedded": {
                                    "node": {
                                      "name": null,
                                      "id": "1632850505316",
                                      "type": "workflow",
                                      "config": {
                                        "workflow_token": "vUr2Fs1y8Qiz1a79kNJk1dk7EfYUAJRK",
                                        "workflow_version_id": 1
                                      }
                                    }
                                  },
                                  "_links": {
                                    "evaluation": {
                                      "href": "/v1/evaluations/L-Vn9uOp0ZyYvjDL1t3Sd7"
                                    }
                                  },
                                  "sdk_config": {
                                    "documents": [
                                      "passport"
                                    ],
                                    "selfie": true
                                  }
                                },
                                {
                                  "type": "completed_evaluation",
                                  "timestamp": 1634059960557,
                                  "outcome": "Approved",
                                  "evaluation_token": "L-Vn9uOp0ZyYvjDL1t3Sd7",
                                  "entity_token": "P-tZOLIOQGVxfixICuvkS0",
                                  "_embedded": {
                                    "node": {
                                      "name": null,
                                      "id": "1632850505316",
                                      "type": "workflow",
                                      "config": {
                                        "workflow_token": "vUr2Fs1y8Qiz1a79kNJk1dk7EfYUAJRK",
                                        "workflow_version_id": 1
                                      }
                                    }
                                  },
                                  "_links": {
                                    "evaluation": {
                                      "href": "/v1/evaluations/L-Vn9uOp0ZyYvjDL1t3Sd7"
                                    }
                                  }
                                },
                                {
                                  "type": "completed_application",
                                  "timestamp": 1634059961453,
                                  "outcome": "Approved",
                                  "entity_token": "P-tZOLIOQGVxfixICuvkS0",
                                  "_embedded": {
                                    "node": {
                                      "name": null,
                                      "id": "1633639581306",
                                      "type": "outcome",
                                      "config": {
                                        "outcome": "Approved"
                                      }
                                    }
                                  },
                                  "_links": {}
                                }
                              ],
                              "journey": {
                                "journey_name": "",
                                "journey_token": "J-qDydegaMK8otdsRYquOR",
                                "_links": {
                                  "self": {
                                    "href": "/v1/journeys/J-qDydegaMK8otdsRYquOR"
                                  }
                                }
                              },
                              "child_entities": [
                                {
                                  "external_entity_identifier": "external_entity_id123",
                                  "name": "John Doe",
                                  "token": "P-tZOLIOQGVxfixICuvkS0",
                                  "type": "person",
                                  "entity_application_token": "EA-GessHRonFRTSXCmErk7J",
                                  "entity_application_status": "completed",
                                  "entity_application_outcome": "approved",
                                  "created": "2021-10-12T20:38:26.493Z"
                                }
                              ],
                              "entity_applications": [
                                {
                                  "entity_token": "P-tZOLIOQGVxfixICuvkS0",
                                  "entity_application_token": "EA-GessHRonFRTSXCmErk7J",
                                  "entity_application_outcome": "approved",
                                  "entity_application_status": "completed",
                                  "entity_application_status_details": null,
                                  "output": {
                                    "outcome_reasons": [
                                      {
                                        "name": "Fraud Risk",
                                        "type": null
                                      }
                                    ],
                                    "output_attributes": {
                                      "income_calculation": 98000
                                    },
                                    "matrix_models": {
                                      "my_matrix": {
                                        "matrix_model_public_version": 5,
                                        "matrix_model_token": "MM-Z37VkZwHMbnzhLJM7ZlX",
                                        "name": "my_matrix",
                                        "result": 15,
                                        "status": "executed",
                                        "x_bucket": 1,
                                        "x_value": 1000,
                                        "y_bucket": 0,
                                        "y_value": 300
                                      }
                                    }
                                  }
                                }
                              ],
                              "entity": {
                                "external_entity_identifier": null,
                                "name": null,
                                "token": "G-wBdsvC7hA84j7p4PTVcD",
                                "type": "group"
                              }
                            },
                            "_links": {
                              "self": {
                                "href": "/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Journeys"
        ],
        "summary": "Get Journey Application",
        "description": "Returns relevant data associated with a journey application.\n",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "journey_application_token": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "sandbox": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "integer"
                    },
                    "updated_at": {
                      "type": "integer"
                    },
                    "closed_at": {
                      "type": "integer"
                    },
                    "complete_outcome": {
                      "type": "string"
                    },
                    "journey_application_status": {
                      "description": "derived from the `status` and `complete_outcome`, this value represents a simplified display status, as seen on the Journey Application Queue and Journey Application pages.",
                      "type": "string"
                    },
                    "is_archived": {
                      "type": "boolean"
                    },
                    "archived_at": {
                      "type": "string"
                    },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "description": "List of journey application events, ordered chronologically. The fields displayed in the event will depend on the event type",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "journey_application_event_token": {
                                "type": "string"
                              },
                              "journey_application_token": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "completed_action",
                                  "completed_application",
                                  "completed_branch",
                                  "completed_evaluation",
                                  "completed_reconciliation",
                                  "completed_review",
                                  "data_request_evaluation",
                                  "error",
                                  "has_finished_sending_additional_entities",
                                  "pending_action_expired",
                                  "pending_action",
                                  "pending_documents",
                                  "pending_evaluation",
                                  "pending_review",
                                  "started_application",
                                  "started_evaluation"
                                ]
                              },
                              "timestamp": {
                                "type": "integer"
                              },
                              "entity_token": {
                                "type": "string"
                              },
                              "entity_application_token": {
                                "type": "string"
                              },
                              "evaluation_token": {
                                "type": "string",
                                "description": "Identifying evaluation token (only in evaluation type events)"
                              },
                              "_embedded": {
                                "type": "object",
                                "properties": {
                                  "node": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "start",
                                          "workflow",
                                          "review",
                                          "outcome",
                                          "action",
                                          "docv"
                                        ]
                                      },
                                      "config": {
                                        "description": "Config related to the specific node, depending on the type",
                                        "type": "object"
                                      },
                                      "workflow_name": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "_links": {
                                "type": "object",
                                "properties": {
                                  "evaluation": {
                                    "type": "object",
                                    "properties": {
                                      "href": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "case": {
                                    "type": "object",
                                    "properties": {
                                      "href": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "sdk_config": {
                                "type": "object",
                                "description": "Settings to be read by SDK to handle processing. Only present on workflow node events.",
                                "properties": {
                                  "documents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "selfie": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "outcome": {
                                "type": "string",
                                "description": "Populated for the following event types: `completed_action`, `completed_application`, `completed_branch`, `completed_evaluation`, `completed_review`, `pending_action_expired`"
                              }
                            }
                          }
                        },
                        "journey": {
                          "type": "object",
                          "properties": {
                            "journey_name": {
                              "type": "string"
                            },
                            "journey_token": {
                              "type": "string"
                            },
                            "journey_version_num": {
                              "type": "string"
                            },
                            "_links": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "description": "GET route for the Journey"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "child_entities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "external_entity_identifier": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "token": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "entity_application_token": {
                                "type": "string"
                              },
                              "entity_application_status": {
                                "type": "string"
                              },
                              "entity_application_outcome": {
                                "type": "string"
                              },
                              "created": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "entity_applications": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entity_token": {
                                "type": "string"
                              },
                              "entity_application_token": {
                                "type": "string"
                              },
                              "entity_application_outcome": {
                                "type": "string"
                              },
                              "entity_application_status": {
                                "type": "string"
                              },
                              "entity_application_status_details": {
                                "type": "object",
                                "description": "Additional details for applications that have status `data_request`",
                                "properties": {
                                  "required": {
                                    "type": "string"
                                  },
                                  "or": {
                                    "type": "string"
                                  },
                                  "optional": {
                                    "type": "string"
                                  }
                                }
                              },
                              "output": {
                                "type": "object",
                                "description": "data aggregated from the outputs of every evaluation run for the entity application",
                                "properties": {
                                  "outcome_reasons": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "adverse_action",
                                            null
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "output_attributes": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        }
                                      ],
                                      "description": "NOTE the dynamic property name refers to the name of the output attribute"
                                    }
                                  },
                                  "matrix_models": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "NOTE the dynamic property name refers to the name of the matrix model",
                                      "properties": {
                                        "matrix_model_public_version": {
                                          "type": "integer"
                                        },
                                        "matrix_model_token": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "result": {
                                          "type": "number",
                                          "nullable": true
                                        },
                                        "status": {
                                          "type": "string",
                                          "enum": [
                                            "executed",
                                            "not_executed"
                                          ]
                                        },
                                        "x_bucket": {
                                          "type": "number",
                                          "nullable": true,
                                          "description": "x-coordinate of the matrix"
                                        },
                                        "x_value": {
                                          "type": "number",
                                          "nullable": true
                                        },
                                        "y_bucket": {
                                          "type": "number",
                                          "nullable": true,
                                          "description": "y-coordinate of the matrix"
                                        },
                                        "y_value": {
                                          "type": "number",
                                          "nullable": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "entity": {
                          "description": "The journey application entity",
                          "type": "object",
                          "properties": {
                            "external_entity_identifier": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "description": "GET route for the Application",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "journey_application_token": "JA-ddjP31DhduTI334Cs3uT",
                    "credit_limit": "42",
                    "annual_interest_rate": "70",
                    "status": "completed",
                    "sandbox": false,
                    "created_at": 1634059958368,
                    "updated_at": 1634059961458,
                    "closed_at": 1634059961464,
                    "recent_outcome": "Approved",
                    "complete_outcome": "Approved",
                    "_embedded": {
                      "events": [
                        {
                          "type": "started_application",
                          "timestamp": 1634059958414,
                          "entity_token": null,
                          "_embedded": {
                            "node": {
                              "name": null,
                              "id": "1632850505316",
                              "type": "workflow",
                              "config": {
                                "workflow_token": "vUr2Fs1y8Qiz1a79kNJk1dk7EfYUAJRK",
                                "workflow_version_id": 1
                              }
                            }
                          },
                          "_links": {}
                        },
                        {
                          "type": "started_evaluation",
                          "timestamp": 1634059958531,
                          "evaluation_token": "L-Vn9uOp0ZyYvjDL1t3Sd7",
                          "entity_token": null,
                          "_embedded": {
                            "node": {
                              "name": null,
                              "id": "1632850505316",
                              "type": "workflow",
                              "config": {
                                "workflow_token": "vUr2Fs1y8Qiz1a79kNJk1dk7EfYUAJRK",
                                "workflow_version_id": 1
                              }
                            }
                          },
                          "_links": {
                            "evaluation": {
                              "href": "/v1/evaluations/L-Vn9uOp0ZyYvjDL1t3Sd7"
                            }
                          },
                          "sdk_config": {
                            "documents": [
                              "passport"
                            ],
                            "selfie": true
                          }
                        },
                        {
                          "type": "completed_evaluation",
                          "timestamp": 1634059960557,
                          "outcome": "Approved",
                          "evaluation_token": "L-Vn9uOp0ZyYvjDL1t3Sd7",
                          "entity_token": "P-tZOLIOQGVxfixICuvkS0",
                          "_embedded": {
                            "node": {
                              "name": null,
                              "id": "1632850505316",
                              "type": "workflow",
                              "config": {
                                "workflow_token": "vUr2Fs1y8Qiz1a79kNJk1dk7EfYUAJRK",
                                "workflow_version_id": 1
                              }
                            }
                          },
                          "_links": {
                            "evaluation": {
                              "href": "/v1/evaluations/L-Vn9uOp0ZyYvjDL1t3Sd7"
                            }
                          }
                        },
                        {
                          "type": "completed_application",
                          "timestamp": 1634059961453,
                          "outcome": "Approved",
                          "entity_token": "P-tZOLIOQGVxfixICuvkS0",
                          "_embedded": {
                            "node": {
                              "name": null,
                              "id": "1633639581306",
                              "type": "outcome",
                              "config": {
                                "outcome": "Approved"
                              }
                            }
                          },
                          "_links": {}
                        }
                      ],
                      "journey": {
                        "journey_name": "",
                        "journey_token": "J-qDydegaMK8otdsRYquOR",
                        "_links": {
                          "self": {
                            "href": "/v1/journeys/J-qDydegaMK8otdsRYquOR"
                          }
                        }
                      },
                      "child_entities": [
                        {
                          "external_entity_identifier": "external_entity_id123",
                          "name": "John Doe",
                          "token": "P-tZOLIOQGVxfixICuvkS0",
                          "type": "person",
                          "entity_application_token": "EA-GessHRonFRTSXCmErk7J",
                          "entity_application_status": "completed",
                          "entity_application_outcome": "approved",
                          "created": "2021-10-12T20:38:26.493Z"
                        }
                      ],
                      "entity_applications": [
                        {
                          "entity_token": "P-tZOLIOQGVxfixICuvkS0",
                          "entity_application_token": "EA-GessHRonFRTSXCmErk7J",
                          "entity_application_outcome": "approved",
                          "entity_application_status": "completed",
                          "entity_application_status_details": null,
                          "output": {
                            "outcome_reasons": [
                              {
                                "name": "Fraud Risk",
                                "type": null
                              }
                            ],
                            "output_attributes": {
                              "income_calculation": 98000
                            },
                            "matrix_models": {
                              "my_matrix": {
                                "matrix_model_public_version": 5,
                                "matrix_model_token": "MM-Z37VkZwHMbnzhLJM7ZlX",
                                "name": "my_matrix",
                                "result": 15,
                                "status": "executed",
                                "x_bucket": 1,
                                "x_value": 1000,
                                "y_bucket": 0,
                                "y_value": 300
                              }
                            }
                          }
                        }
                      ],
                      "entity": {
                        "external_entity_identifier": null,
                        "name": null,
                        "token": "G-wBdsvC7hA84j7p4PTVcD",
                        "type": "group"
                      }
                    },
                    "_links": {
                      "self": {
                        "href": "/v1/journeys/J-qDydegaMK8otdsRYquOR/applications/JA-ddjP31DhduTI334Cs3uT"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journeys/{journey_token}/applications/{application_token}/nodes/{node_id}": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "journey_token",
            "required": true,
            "description": "Identifier of the journey",
            "schema": {
              "type": "string",
              "example": "J-XXwlkEwOcdxQXbbBxoaO"
            }
          },
          {
            "in": "path",
            "name": "application_token",
            "required": true,
            "description": "Identifier of the journey application",
            "schema": {
              "type": "string",
              "example": "JA-mhjlfS6nZe1G6HuvAKVq"
            }
          },
          {
            "in": "path",
            "name": "node_id",
            "required": true,
            "description": "Id of action node. This can be retrieved through the `pending_action` event in the journey application response",
            "schema": {
              "type": "string",
              "example": 1653494699250
            }
          },
          {
            "in": "query",
            "name": "entity_token",
            "description": "Identifier of the entity",
            "schema": {
              "type": "string",
              "example": "P-VJy577gSbYvm5cpKwkjH"
            }
          },
          {
            "in": "query",
            "name": "entity_application_token",
            "description": "Identifier of the entity's application",
            "schema": {
              "type": "string",
              "example": "EA-mj6K0TmIHTa7ufo0hQSC"
            }
          }
        ],
        "tags": [
          "Journeys"
        ],
        "summary": "Update Journey Application Action Node",
        "description": "If an entity application has the status `pending_action`, this endpoint must be used to inform the system of the outcome of the action and advance the application accordingly.\n\nFor multi-entity applications, the entity application must be identified by sending either `entity_application_token` or `entity_token`. See those parameters' descriptions for more detail.\n\nIf the action has been configured to expire, the system checks if an action has expired every 12 hours from the time the application visits the action node. The system also checks for expiration if a request to this endpoint is made, and the application will advance according to the journey configuration if the action node has expired. \n\nAdditional data can also be optionally sent to the subsequent nodes in order to update the application.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "outcome"
                ],
                "properties": {
                  "outcome": {
                    "type": "string",
                    "enum": [
                      "approved",
                      "denied",
                      "manual review"
                    ],
                    "description": "Action outcome to set for the given entity. This outcome must be a valid outcome of the node.\n"
                  },
                  "data": {
                    "type": "object",
                    "description": "Optional payload to be merged into the application's existing payload and passed\nto subsequent nodes as input attributes\n",
                    "example": {
                      "creditScore": 800,
                      "creditLine": 5000
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/journeys/{journey_token}/applications/{application_token}/cases/{case_token}/review": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "journey_token",
            "required": true,
            "description": "Identifier of the journey",
            "schema": {
              "type": "string",
              "example": "J-XXwlkEwOcdxQXbbBxoaO"
            }
          },
          {
            "in": "path",
            "name": "application_token",
            "required": true,
            "description": "Identifier of the journey application",
            "schema": {
              "type": "string",
              "example": "JA-mhjlfS6nZe1G6HuvAKVq"
            }
          },
          {
            "in": "path",
            "name": "case_token",
            "required": true,
            "description": "Identifier of the case that's being reviewed. You can get this from the list of Journey Application events returned by the GET request where the event `type` is `pending_review` and the `entity_application_token` is for the entity application you wish to review.",
            "schema": {
              "type": "string",
              "example": "C-9fYQgwCIFIrlzmFBu8Im"
            }
          }
        ],
        "tags": [
          "Journeys"
        ],
        "summary": "Manual Review Entity Application",
        "description": "If an entity application has the status `pending_review`, this endpoint can be used to inform the system of the outcome of the manual review and submit review notes. In the first request for a given case, the outcome and optionally reason and note are submitted. In subsequent requests for the same case, only the note is allowed, as the review is closed and no longer accepting new outcomes or reasons.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string",
                    "description": "Note to be attached to the review.",
                    "example": "This is good to go"
                  },
                  "outcome": {
                    "type": "string",
                    "description": "Outcome to complete the manual review with.",
                    "example": "Approved"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Reason for the given outcome. This must be associated with the outcome in the Alloy portal.",
                    "example": "Passed manual checks"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/journeys/{journey_token}/applications/{application_token}/review": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "journey_token",
            "required": true,
            "description": "Identifier of the journey",
            "schema": {
              "type": "string",
              "example": "J-XXwlkEwOcdxQXbbBxoaO"
            }
          },
          {
            "in": "path",
            "name": "application_token",
            "required": true,
            "description": "Identifier of the journey application",
            "schema": {
              "type": "string",
              "example": "JA-mhjlfS6nZe1G6HuvAKVq"
            }
          }
        ],
        "tags": [
          "Journeys"
        ],
        "summary": "Manual Review Journey Application",
        "description": "If a journey application has the status `pending_journey_application_review`, this endpoint can be used to inform the system of the outcome of the manual review and submit review notes. The outcome submitted here will be the final outcome of the journey application.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string",
                    "description": "Note to be attached to the review.",
                    "example": "This is good to go"
                  },
                  "outcome": {
                    "type": "string",
                    "description": "Outcome to complete the manual review with.",
                    "example": "Approved"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Reason for the given outcome. This must be associated with the outcome in the Alloy portal.",
                    "example": "Passed manual checks"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "journey_application_token": {
                      "type": "string",
                      "example": "JA-LS0GHKjDNhY6dGlvYxxH"
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "example": "/v1/journeys/J-Kq8jlFcA4veeHCtt823h/applications/JA-LS0GHKjDNhY6dGlvYxxH",
                              "description": "GET route for the Application"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journeys/{journey_token}/parameters": {
      "parameters": [
        {
          "in": "path",
          "name": "journey_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token associated with your Journey",
          "example": "J-XXwlkEwOcdxQXbbBxoaO"
        },
        {
          "in": "header",
          "name": "alloy-journey-version",
          "schema": {
            "type": "number",
            "description": "Specifies the journey version to create an application from.\nThis includes drafts and inactive versions.\nIf not supplied, the active journey version will be used.\n",
            "example": 1
          }
        }
      ],
      "get": {
        "tags": [
          "Journeys"
        ],
        "summary": "Get Journey Parameters",
        "description": "This endpoint retrieves the required and optional parameters for all workflow nodes in the given Journey.\nThe parameters will be aggregated and segmented by branch and then by workflow. Any workflow that exists more than\nonce within a branch will be deduplicated in the response for that branch.\n",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "journey_token": {
                      "type": "string"
                    },
                    "journey_version": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "branch_name": {
                            "type": "string"
                          },
                          "workflows": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "workflow_name": {
                                  "type": "string"
                                },
                                "parameters": {
                                  "type": "object",
                                  "properties": {
                                    "required": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "optional": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "or": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lists": {
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get all Lists",
        "description": "Returns the set of all Lists for your account",
        "responses": {
          "200": {
            "description": "All Lists for account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "list_token": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "status_code": 200,
                    "error": null,
                    "timestamp": 1557675468774,
                    "data": [
                      {
                        "list_token": "I-o2RgMSb72V1p8834bokr",
                        "name": "Allowlist"
                      },
                      {
                        "list_token": "I-CRAAplpejPkJnLpWCpxy",
                        "name": "Denylist"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lists/{list_token}": {
      "parameters": [
        {
          "in": "path",
          "name": "list_token",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Token of List to operate on"
        }
      ],
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get one List's entities",
        "description": "Return all entities belonging to the specified List",
        "parameters": [
          {
            "in": "query",
            "name": "records",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Number of records to retrieve"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Offset of retrieved records"
          }
        ],
        "responses": {
          "200": {
            "description": "List entities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "list_token": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name_first": {
                            "type": "string"
                          },
                          "name_last": {
                            "type": "string"
                          },
                          "birth_date": {
                            "type": "string"
                          },
                          "document_ssn": {
                            "type": "string"
                          },
                          "address_line_1": {
                            "type": "string"
                          },
                          "address_line_2": {
                            "type": "string"
                          },
                          "address_city": {
                            "type": "string"
                          },
                          "address_state": {
                            "type": "string"
                          },
                          "address_postal_code": {
                            "type": "string"
                          },
                          "address_country_code": {
                            "type": "string"
                          },
                          "ip_address_v4": {
                            "type": "string"
                          },
                          "ip_address_v6": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "acm_party_id": {
                            "type": "string"
                          },
                          "customer_id": {
                            "type": "string"
                          },
                          "system": {
                            "type": "string"
                          },
                          "secret_question": {
                            "type": "string"
                          },
                          "secret_answer": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "group": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "name_first": "John",
                          "name_last": "Doe",
                          "birth_date": "1980-01-01",
                          "document_ssn": 123321123,
                          "address_line_1": "123 Fake Street",
                          "address_line_2": "Apt 10D",
                          "address_city": "Brooklyn",
                          "address_state": "NY",
                          "address_postal_code": 11221,
                          "address_country_code": "US",
                          "ip_address_v4": "192.168.1.168",
                          "ip_address_v6": null,
                          "email_address": "john.doe@gmail.com",
                          "phone_number": 5558031203,
                          "acm_party_id": 12341231,
                          "customer_id": 1249403039484,
                          "system": "bridger",
                          "secret_question": "what is your quest",
                          "secret_answer": "to seek the holy grail",
                          "comment": "this is a comment",
                          "group": "aml"
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "next": {
                          "type": "string"
                        },
                        "previous": {
                          "type": "string"
                        },
                        "total_records": {
                          "type": "integer"
                        },
                        "page_records": {
                          "type": "integer"
                        },
                        "offset": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "status_code": 200,
                    "error": null,
                    "timestamp": 1557675468774,
                    "name": "Denylisted entities",
                    "list_token": "I-23jkr423ojdfn23jon",
                    "data": [
                      {
                        "name_first": "John",
                        "name_last": "Doe",
                        "birth_date": "1980-01-01",
                        "document_ssn": 123321123,
                        "address_line_1": "123 Fake Street",
                        "address_line_2": "Apt 10D",
                        "address_city": "Brooklyn",
                        "address_state": "NY",
                        "address_postal_code": 11221,
                        "address_country_code": "US",
                        "ip_address_v4": "192.168.1.168",
                        "ip_address_v6": null,
                        "email_address": "john.doe@gmail.com",
                        "phone_number": 5558031203,
                        "acm_party_id": 12341231,
                        "customer_id": 1249403039484,
                        "system": "bridger",
                        "secret_question": "what is your quest",
                        "secret_answer": "to seek the holy grail",
                        "comment": "this is a comment",
                        "group": "aml"
                      }
                    ],
                    "paging": {
                      "next": "api.alloy.co/lists/I-23jkr423ojdfn23jon?records=2&offset=4",
                      "previous": "api.alloy.co/lists/I-23jkr423ojdfn23jon?records=2&offset=0",
                      "total_records": 300,
                      "page_records": 20,
                      "offset": 20
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Lists"
        ],
        "summary": "Add an entity to a List",
        "description": "Add an individual to a List while leaving the rest of the List's records intact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name_first": {
                    "type": "string"
                  },
                  "name_last": {
                    "type": "string"
                  },
                  "birth_date": {
                    "type": "string"
                  },
                  "document_ssn": {
                    "type": "string"
                  },
                  "address_line_1": {
                    "type": "string"
                  },
                  "address_line_2": {
                    "type": "string"
                  },
                  "address_city": {
                    "type": "string"
                  },
                  "address_state": {
                    "type": "string"
                  },
                  "address_postal_code": {
                    "type": "string"
                  },
                  "address_country_code": {
                    "type": "string"
                  },
                  "ip_address_v4": {
                    "type": "string"
                  },
                  "ip_address_v6": {
                    "type": "string"
                  },
                  "email_address": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "acm_party_id": {
                    "type": "string"
                  },
                  "customer_id": {
                    "type": "string"
                  },
                  "system": {
                    "type": "string"
                  },
                  "secret_question": {
                    "type": "string"
                  },
                  "secret_answer": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  }
                },
                "example": {
                  "name_first": "John",
                  "name_last": "Doe",
                  "birth_date": "1980-01-01",
                  "document_ssn": 123321123,
                  "address_line_1": "123 Fake Street",
                  "address_line_2": "Apt 10D",
                  "address_city": "Brooklyn",
                  "address_state": "NY",
                  "address_postal_code": 11221,
                  "address_country_code": "US",
                  "ip_address_v4": "192.168.1.168",
                  "ip_address_v6": null,
                  "email_address": "john.doe@gmail.com",
                  "phone_number": 5558031203,
                  "acm_party_id": 12341231,
                  "customer_id": 1249403039484,
                  "system": "bridger",
                  "secret_question": "what is your quest",
                  "secret_answer": "to seek the holy grail",
                  "comment": "this is a comment",
                  "group": "aml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully appended List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "list_token": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    },
                    "records_added": {
                      "type": "integer"
                    },
                    "total_records": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "status_code": 200,
                    "error": null,
                    "timestamp": 1557675468774,
                    "name": "Denylisted entities",
                    "list_token": "I-grYZsEoy623M3LiZrK66",
                    "data": "https://sandbox.alloy.co/lists/I-grYZsEoy623M3LiZrK66",
                    "records_added": 1,
                    "total_records": 1
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Lists"
        ],
        "summary": "Replace the entire List",
        "description": "Overwrite the entire List with the contents of the submitted array",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name_first": {
                      "type": "string"
                    },
                    "name_last": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string"
                    },
                    "document_ssn": {
                      "type": "string"
                    },
                    "address_line_1": {
                      "type": "string"
                    },
                    "address_line_2": {
                      "type": "string"
                    },
                    "address_city": {
                      "type": "string"
                    },
                    "address_state": {
                      "type": "string"
                    },
                    "address_postal_code": {
                      "type": "string"
                    },
                    "address_country_code": {
                      "type": "string"
                    },
                    "ip_address_v4": {
                      "type": "string"
                    },
                    "ip_address_v6": {
                      "type": "string"
                    },
                    "email_address": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "acm_party_id": {
                      "type": "string"
                    },
                    "customer_id": {
                      "type": "string"
                    },
                    "system": {
                      "type": "string"
                    },
                    "secret_question": {
                      "type": "string"
                    },
                    "secret_answer": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "group": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "name_first": "John",
                    "name_last": "Doe",
                    "birth_date": "1980-01-01",
                    "document_ssn": 123321123,
                    "address_line_1": "123 Fake Street",
                    "address_line_2": "Apt 10D",
                    "address_city": "Brooklyn",
                    "address_state": "NY",
                    "address_postal_code": 11221,
                    "address_country_code": "US",
                    "ip_address_v4": "192.168.1.168",
                    "ip_address_v6": null,
                    "email_address": "john.doe@gmail.com",
                    "phone_number": 5558031203,
                    "acm_party_id": 12341231,
                    "customer_id": 1249403039484,
                    "system": "bridger",
                    "secret_question": "what is your quest",
                    "secret_answer": "to seek the holy grail",
                    "comment": "this is a comment",
                    "group": "aml"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully replaced List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number"
                    },
                    "error": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "list_token": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    },
                    "records_added": {
                      "type": "integer"
                    },
                    "total_records": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "status_code": 200,
                    "error": null,
                    "timestamp": 1557675468774,
                    "name": "Denylisted entities",
                    "list_token": "I-grYZsEoy623M3LiZrK66",
                    "data": "https://sandbox.alloy.co/lists/I-grYZsEoy623M3LiZrK66",
                    "records_added": 1,
                    "total_records": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oauth/bearer": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Generate a new OAuth bearer token from the given client credentials.",
        "description": "Application token and application secret MUST be provided, either as properties in the JSON body, or in the Authorization header.\n\nThe returned bearer token will allow the client all the same access permissions as the given application token and secret. Bearer tokens are sent in the `Authorization` header in the form `Bearer <bearer_token>`.\n\nAll bearer tokens expire one hour from generation.\n",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "description": "Basic authorization header per the OAuth Client Authorization Header standard.\n\nThe format is `Basic <auth_string>`, where `<auth_string>` is the base64 encode of the string `application_token:application_secret` (the application token and application secret, separated by a colon character).\n"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "application_token": {
                    "type": "string",
                    "pattern": "^[A-Za-z0-9]{32}$",
                    "description": "Application token for the client. This is the application token for a particular workflow."
                  },
                  "application_secret": {
                    "type": "string",
                    "pattern": "^[A-Za-z0-9]{32}$",
                    "description": "Application secret for the client. This is the application secret for a particular workflow (and must match the application token)."
                  },
                  "grant_type": {
                    "type": "string",
                    "description": "OAuth grant type. Only the \"Client Credentials\" grant type is supported.",
                    "enum": [
                      "client_credentials"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "The generated OAuth bearer token.\n\nIf credentials are sent in the Authorization header, the OAuth standard fields `access_token`, `token_type`, and `expires_in` are returned.\n\nIf credentials are sent in the JSON body, fields `bearer_token` and `expires` are returned. This is for backwards-compatibility with the original version of this API.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "pattern": "^[A-Za-z0-9]{40}$",
                      "description": "OAuth bearer token."
                    },
                    "bearer_token": {
                      "type": "string",
                      "pattern": "^[A-Za-z0-9]{40}$",
                      "description": "OAuth bearer token."
                    },
                    "token_type": {
                      "type": "string",
                      "enum": [
                        "bearer"
                      ]
                    },
                    "expires_in": {
                      "type": "number",
                      "description": "Seconds until expiration."
                    },
                    "expires": {
                      "type": "number",
                      "description": "Expiration time, in **milliseconds** past the epoch."
                    }
                  }
                },
                "example": {
                  "access_token": "IcR6p1pbUJjn58xCXewm8ni2U3c0pRCbyqTA5I0x",
                  "token_type": "bearer",
                  "expires_in": 3600
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "minor_code": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "minor_code",
                        "type",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "examples": {
                  "HeaderValidationFailure": {
                    "value": {
                      "error": {
                        "minor_code": 4001,
                        "type": "Header Validation Failure",
                        "message": "Verify that your request headers comply with HTTP v1.1 standards."
                      }
                    }
                  },
                  "RequestBodyValiationFailure": {
                    "value": {
                      "error": {
                        "minor_code": 4002,
                        "type": "Request Body Validation Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "x-summary": "Unauthorized",
            "description": "Authorization failed / invalid credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "minor_code": {
                          "type": "number",
                          "enum": [
                            4011
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "minor_code",
                        "type",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "minor_code": 4011,
                    "type": "Unauthorized",
                    "message": "Unable to obtain a bearer token using specified application credentials. The application may be disabled?"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oauth/refresh": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Refresh a bearer token.",
        "description": "Given a non-expired bearer token, return a new one that expires an hour from now.\n\nAllows clients to keep generating fresh bearer tokens without re-sending the application token and secret.\n\n**Note that** the bearer token MUST be sent in the JSON body; it CANNOT be sent as an Authorization header.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bearer_token": {
                    "type": "string",
                    "pattern": "^[A-Za-z0-9]{40}$",
                    "description": "OAuth bearer token."
                  }
                },
                "required": [
                  "bearer_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "The newly generated OAuth bearer token.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bearer_token": {
                      "type": "string",
                      "pattern": "^[A-Za-z0-9]{40}$",
                      "description": "OAuth bearer token."
                    },
                    "expires": {
                      "type": "number",
                      "description": "Expiration time, in **milliseconds** past the epoch."
                    }
                  },
                  "required": [
                    "bearer_token",
                    "expires"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "minor_code": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "minor_code",
                        "type",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "examples": {
                  "HeaderValidationFailure": {
                    "value": {
                      "error": {
                        "minor_code": 4001,
                        "type": "Header Validation Failure",
                        "message": "Verify that your request headers comply with HTTP v1.1 standards."
                      }
                    }
                  },
                  "RequestBodyValiationFailure": {
                    "value": {
                      "error": {
                        "minor_code": 4002,
                        "type": "Request Body Validation Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "x-summary": "Unauthorized",
            "description": "Invalid or expired bearer token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "minor_code": {
                          "type": "number",
                          "enum": [
                            4014
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "minor_code",
                        "type",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "minor_code": 4014,
                    "type": "Unauthorized",
                    "message": "Unable to refresh supplied bearer token. The supplied bearer token is either expired, revoked or invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oauth/validate": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Validate a bearer token.",
        "description": "Check if a given bearer token is valid and unexpired.\n\n**Note that** the bearer token MUST be sent in the JSON body; it CANNOT be sent as an Authorization header.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bearer_token": {
                    "type": "string",
                    "pattern": "^[A-Za-z0-9]{40}$",
                    "description": "OAuth bearer token."
                  }
                },
                "required": [
                  "bearer_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Successful result when given a valid, non-expired bearer token.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    },
                    "application_active": {
                      "type": "boolean"
                    },
                    "expires": {
                      "type": "number",
                      "description": "Expiration time, in **milliseconds** past the epoch."
                    }
                  },
                  "required": [
                    "valid",
                    "application_active",
                    "expires"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "minor_code": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "minor_code",
                        "type",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "examples": {
                  "HeaderValidationFailure": {
                    "value": {
                      "error": {
                        "minor_code": 4001,
                        "type": "Header Validation Failure",
                        "message": "Verify that your request headers comply with HTTP v1.1 standards."
                      }
                    }
                  },
                  "RequestBodyValiationFailure": {
                    "value": {
                      "error": {
                        "minor_code": 4002,
                        "type": "Request Body Validation Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "x-summary": "Unauthorized",
            "description": "Invalid or expired bearer token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "minor_code": {
                          "type": "number",
                          "enum": [
                            4011
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "minor_code",
                        "type",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": {
                    "minor_code": 4011,
                    "type": "Unauthorized",
                    "message": "Your supplied bearer token is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entities/{entity_token}/reviews/{review_token}": {
      "get": {
        "parameters": [
          {
            "name": "entity_token",
            "in": "path",
            "description": "Unique ID for the Entity or Group associated with the Review.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "review_token",
            "in": "path",
            "description": "Unique ID for the Review.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Reviews"
        ],
        "summary": "Retrieve a Review",
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Review Object.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "review_token": {
                      "description": "Unique ID for the Review.",
                      "type": "string"
                    },
                    "entity_token": {
                      "description": "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.",
                      "type": "string"
                    },
                    "group_token": {
                      "description": "Unique ID for the Group (of Entities) associated with the Review.",
                      "type": "string"
                    },
                    "application_token": {
                      "description": "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.",
                      "type": "string"
                    },
                    "outcome": {
                      "description": "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.",
                      "type": "string"
                    },
                    "application_name": {
                      "description": "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.",
                      "type": "string"
                    },
                    "reviewer": {
                      "description": "Email of the Agent that created the Review.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Unix timestamp when the Review was created.",
                      "type": "number"
                    },
                    "reasons": {
                      "type": "array",
                      "description": "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "agent": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "description": "Valid email of agent with Alloy account access.",
                          "type": "string"
                        },
                        "external_id": {
                          "description": "Unique external ID associated with the Agent, if any.",
                          "type": "string"
                        }
                      }
                    },
                    "notes": {
                      "type": "array",
                      "description": "Array of notes associated with the Review, if any.",
                      "items": {
                        "properties": {
                          "note": {
                            "description": "Content to include in the body of the note.",
                            "type": "string"
                          },
                          "note_author_agent_email": {
                            "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                            "type": "string"
                          },
                          "created_at": {
                            "description": "Unix timestamp when the note was created.",
                            "type": "number"
                          },
                          "updated_at": {
                            "description": "Unix timestamp when the note was last updated.",
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/entities/{entity_token}/reviews/{review_token}/notes": {
      "post": {
        "parameters": [
          {
            "name": "entity_token",
            "in": "path",
            "description": "Unique ID for the Entity or Group associated with the Review.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "review_token",
            "in": "path",
            "description": "Unique ID for the Review.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Reviews"
        ],
        "summary": "Add a Note to a Review.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "note",
                  "note_author_agent_email"
                ],
                "properties": {
                  "note": {
                    "description": "Content to include in the body of the note.",
                    "type": "string"
                  },
                  "note_author_agent_email": {
                    "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Note Object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note": {
                      "description": "Content to include in the body of the note.",
                      "type": "string"
                    },
                    "note_author_agent_email": {
                      "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "Unix timestamp when the note was created.",
                      "type": "number"
                    },
                    "updated_at": {
                      "description": "Unix timestamp when the note was last updated.",
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entities/{entity_token}/reviews": {
      "get": {
        "parameters": [
          {
            "name": "entity_token",
            "in": "path",
            "description": "Unique ID for the Entity or Group associated with the Review.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Reviews"
        ],
        "summary": "Retrieve All Reviews for an Entity",
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Array of Review objects associated with the Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "review_token": {
                        "description": "Unique ID for the Review.",
                        "type": "string"
                      },
                      "entity_token": {
                        "description": "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.",
                        "type": "string"
                      },
                      "group_token": {
                        "description": "Unique ID for the Group (of Entities) associated with the Review.",
                        "type": "string"
                      },
                      "application_token": {
                        "description": "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.",
                        "type": "string"
                      },
                      "outcome": {
                        "description": "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.",
                        "type": "string"
                      },
                      "application_name": {
                        "description": "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.",
                        "type": "string"
                      },
                      "reviewer": {
                        "description": "Email of the Agent that created the Review.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Unix timestamp when the Review was created.",
                        "type": "number"
                      },
                      "reasons": {
                        "type": "array",
                        "description": "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "description": "Valid email of agent with Alloy account access.",
                            "type": "string"
                          },
                          "external_id": {
                            "description": "Unique external ID associated with the Agent, if any.",
                            "type": "string"
                          }
                        }
                      },
                      "notes": {
                        "type": "array",
                        "description": "Array of notes associated with the Review, if any.",
                        "items": {
                          "properties": {
                            "note": {
                              "description": "Content to include in the body of the note.",
                              "type": "string"
                            },
                            "note_author_agent_email": {
                              "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Unix timestamp when the note was created.",
                              "type": "number"
                            },
                            "updated_at": {
                              "description": "Unix timestamp when the note was last updated.",
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "name": "entity_token",
            "in": "path",
            "description": "Unique ID for the Entity or Group associated with the Review. If a Group Token is passed, the Group Token is set to the `entity_token` parameter in the response.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Reviews"
        ],
        "summary": "Create a Review for an Entity",
        "description": "When an evaluation is assigned a “Manual Review” outcome, it goes to the Review Queue. While evaluations can be managed in the dashboard, it is also possible to change a status via API.\n\nThis endpoint can only be used for non-Journey evaluations. To review Journey or Entity applications, see the Journeys section.\n\n**A few things to note:**\n  * The agent whose email you include in the body of the request must be an agent on the account (View agents on the account via the main page of your account under \"Agents\").\n  * The chosen outcome for the evaluation, as well as the reason given for that outcome in the body of the API request, must perfectly match those set up in Settings --> Review Reasons.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "agent",
                  "reasons",
                  "outcome"
                ],
                "properties": {
                  "agent": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "description": "Valid email of agent with Alloy account access.",
                        "type": "string"
                      }
                    }
                  },
                  "reasons": {
                    "type": "array",
                    "description": "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "outcome": {
                    "description": "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Review",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "review_token": {
                      "description": "Unique ID for the Review.",
                      "type": "string"
                    },
                    "entity_token": {
                      "description": "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.",
                      "type": "string"
                    },
                    "group_token": {
                      "description": "Unique ID for the Group (of Entities) associated with the Review.",
                      "type": "string"
                    },
                    "application_token": {
                      "description": "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.",
                      "type": "string"
                    },
                    "outcome": {
                      "description": "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.",
                      "type": "string"
                    },
                    "application_name": {
                      "description": "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.",
                      "type": "string"
                    },
                    "reviewer": {
                      "description": "Email of the Agent that created the Review.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Unix timestamp when the Review was created.",
                      "type": "number"
                    },
                    "reasons": {
                      "type": "array",
                      "description": "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "agent": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "description": "Valid email of agent with Alloy account access.",
                          "type": "string"
                        },
                        "external_id": {
                          "description": "Unique external ID associated with the Agent, if any.",
                          "type": "string"
                        }
                      }
                    },
                    "notes": {
                      "type": "array",
                      "description": "Array of notes associated with the Review, if any.",
                      "items": {
                        "properties": {
                          "note": {
                            "description": "Content to include in the body of the note.",
                            "type": "string"
                          },
                          "note_author_agent_email": {
                            "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                            "type": "string"
                          },
                          "created_at": {
                            "description": "Unix timestamp when the note was created.",
                            "type": "number"
                          },
                          "updated_at": {
                            "description": "Unix timestamp when the note was last updated.",
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group_token}/reviews": {
      "post": {
        "parameters": [
          {
            "name": "group_token",
            "in": "path",
            "description": "Unique ID for the Group associated with the Review. When reviewing a Group via this endpoint, the Group Token is set in `group_token` in the response, and the `entity_token` property is not returned.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Reviews"
        ],
        "summary": "Create a Review for a Group.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "agent",
                  "reasons",
                  "outcome"
                ],
                "properties": {
                  "agent": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "description": "Valid email of agent with Alloy account access.",
                        "type": "string"
                      }
                    }
                  },
                  "reasons": {
                    "type": "array",
                    "description": "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "outcome": {
                    "description": "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Review Object.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "review_token": {
                      "description": "Unique ID for the Review.",
                      "type": "string"
                    },
                    "entity_token": {
                      "description": "Unique ID for the Entity associated with the Review. Depending on how the Review is created, this value can also point to a Group Token.",
                      "type": "string"
                    },
                    "group_token": {
                      "description": "Unique ID for the Group (of Entities) associated with the Review.",
                      "type": "string"
                    },
                    "application_token": {
                      "description": "Unique ID for the Application (Workflow) associated with the Review. If Review is created via the API, this is determined by the authentication tokens used.",
                      "type": "string"
                    },
                    "outcome": {
                      "description": "Outcome of the Review. Value should equal an Outcome that's defined in your Alloy account settings.",
                      "type": "string"
                    },
                    "application_name": {
                      "description": "Name of the Application (Workflow) associated with this Review. If Review is created via the API, this is determined by the authentication tokens used.",
                      "type": "string"
                    },
                    "reviewer": {
                      "description": "Email of the Agent that created the Review.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Unix timestamp when the Review was created.",
                      "type": "number"
                    },
                    "reasons": {
                      "type": "array",
                      "description": "Array of reasons for this Review and the Review's Outcome. Value should should equal a Review Reason that's defined in your Alloy account settings.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "agent": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "description": "Valid email of agent with Alloy account access.",
                          "type": "string"
                        },
                        "external_id": {
                          "description": "Unique external ID associated with the Agent, if any.",
                          "type": "string"
                        }
                      }
                    },
                    "notes": {
                      "type": "array",
                      "description": "Array of notes associated with the Review, if any.",
                      "items": {
                        "properties": {
                          "note": {
                            "description": "Content to include in the body of the note.",
                            "type": "string"
                          },
                          "note_author_agent_email": {
                            "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                            "type": "string"
                          },
                          "created_at": {
                            "description": "Unix timestamp when the note was created.",
                            "type": "number"
                          },
                          "updated_at": {
                            "description": "Unix timestamp when the note was last updated.",
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group_token}/reviews/{review_token}/notes": {
      "post": {
        "parameters": [
          {
            "name": "group_token",
            "in": "path",
            "description": "Unique ID for the Group associated with the Review. When reviewing a Group via this endpoint, the Group Token is set in `group_token` in the response, and the `entity_token` property is not returned.",
            "schema": {
              "type": "string"
            },
            "example": "G-nAq6pvYcJgOhYi4ImwJs",
            "required": true
          },
          {
            "name": "review_token",
            "in": "path",
            "description": "Unique ID for the Review.",
            "schema": {
              "type": "string"
            },
            "example": "R-YdTUzlDapbQ7Y8bZKB4v",
            "required": true
          }
        ],
        "tags": [
          "Reviews"
        ],
        "summary": "Add a Note to a Review Group.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "note",
                  "note_author_agent_email"
                ],
                "properties": {
                  "note": {
                    "description": "Content to include in the body of the note.",
                    "type": "string"
                  },
                  "note_author_agent_email": {
                    "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Review Group Note Response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "review_token": {
                      "description": "Unique ID for the Review.",
                      "type": "string"
                    },
                    "note": {
                      "description": "Content to include in the body of the note.",
                      "type": "string"
                    },
                    "note_author_agent_email": {
                      "description": "Valid email of agent with Alloy account access, associated with creation of the note.",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "Unix timestamp when the note was created.",
                      "type": "number"
                    },
                    "updated_at": {
                      "description": "Unix timestamp when the note was last updated.",
                      "type": "number"
                    }
                  },
                  "example": {
                    "review_token": "R-c78PhQHJOeJhPfzYh5MX",
                    "note": "this is a note",
                    "note_author_agent_email": "this+agent@alloy.co",
                    "created_at": 1634059958368,
                    "updated_at": 1634059958368
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transaction_id}": {
      "parameters": [
        {
          "in": "path",
          "name": "transaction_id",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update a transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "transaction_date": {
                    "description": "ISO 8601 date",
                    "type": "string"
                  },
                  "latest_transaction_date": {
                    "description": "ISO 8601 date",
                    "type": "string"
                  },
                  "settled_at": {
                    "description": "ISO 8601 date",
                    "type": "string"
                  },
                  "amount": {
                    "description": "Amount in cents",
                    "type": "integer"
                  },
                  "category": {
                    "description": "Max 250 characters",
                    "type": "string"
                  },
                  "currency": {
                    "description": "3-character currency code (e.g. \"USD\")",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "card_process_mode": {
                    "type": "number"
                  },
                  "device_type_code": {
                    "type": "string"
                  },
                  "type_code": {
                    "type": "string"
                  },
                  "type_description": {
                    "type": "string"
                  },
                  "is_approved": {
                    "type": "boolean"
                  },
                  "approval_code": {
                    "type": "string"
                  },
                  "is_reversal": {
                    "type": "boolean"
                  },
                  "transaction_meta": {
                    "type": "object"
                  },
                  "process_method": {
                    "type": "string"
                  },
                  "is_triggered_by_user": {
                    "type": "boolean"
                  },
                  "is_international_override": {
                    "type": "boolean"
                  },
                  "interaction_point": {
                    "type": "string"
                  },
                  "return_code": {
                    "type": "string"
                  },
                  "return_code_reason": {
                    "description": "Allowed values are (`\"Unauthorized\"`, `null`)",
                    "type": "string"
                  },
                  "status": {
                    "description": "Allowed values are (`\"Acknowledged\"`, `\"Accepted\"`, `\"Rejected\"`, `\"Paused\"`, `\"Pending\"`, `\"Completed\"`, `\"Declined\"`, `\"Cancelled\"`, `null`)",
                    "type": "string"
                  },
                  "status_detail": {
                    "type": "string"
                  }
                },
                "example": {
                  "transaction_date": "2021-10-24 18:02:00+00",
                  "latest_transaction_date": "2021-10-24 18:02:00+00",
                  "settled_at": "2021-10-24 18:03:00+00",
                  "amount": 200,
                  "category": "Deposit",
                  "currency": "USD",
                  "description": "Mobile App Deposit",
                  "is_approved": true,
                  "transaction_meta": {
                    "customAttribute": "customValue"
                  },
                  "process_method": "ACH",
                  "interaction_point": "iOS"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "x-summary": "OK",
            "description": "Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "transaction_id": {
                      "type": "string"
                    },
                    "transaction_date": {
                      "description": "ISO 8601 date",
                      "type": "string"
                    },
                    "latest_transaction_date": {
                      "description": "ISO 8601 date",
                      "type": "string"
                    },
                    "settled_at": {
                      "description": "ISO 8601 date",
                      "type": "string"
                    },
                    "amount": {
                      "description": "Amount in cents",
                      "type": "integer"
                    },
                    "category": {
                      "description": "Max 250 characters",
                      "type": "string"
                    },
                    "currency": {
                      "description": "3-character currency code (e.g. \"USD\")",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "card_process_mode": {
                      "type": "number"
                    },
                    "device_type_code": {
                      "type": "string"
                    },
                    "type_code": {
                      "type": "string"
                    },
                    "type_description": {
                      "type": "string"
                    },
                    "is_approved": {
                      "type": "boolean"
                    },
                    "approval_code": {
                      "type": "string"
                    },
                    "is_reversal": {
                      "type": "boolean"
                    },
                    "meta": {
                      "type": "object"
                    },
                    "process_method": {
                      "type": "string"
                    },
                    "is_triggered_by_user": {
                      "type": "boolean"
                    },
                    "is_international_override": {
                      "type": "boolean"
                    },
                    "interaction_point": {
                      "type": "string"
                    },
                    "return_code": {
                      "type": "string"
                    },
                    "return_code_reason": {
                      "description": "Allowed values are (`\"Unauthorized\"`, `null`)",
                      "type": "string"
                    },
                    "status": {
                      "description": "Allowed values are (`\"Acknowledged\"`, `\"Accepted\"`, `\"Rejected\"`, `\"Paused\"`, `\"Pending\"`, `\"Completed\"`, `\"Declined\"`, `\"Cancelled\"`, `null`)",
                      "type": "string"
                    },
                    "status_detail": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status_code": 200,
                    "error": null,
                    "transaction_id": "sample-001",
                    "transaction_date": "2021-10-24T18:02:00.000Z",
                    "latest_transaction_date": "2021-10-24T18:02:00.000Z",
                    "settled_at": "2021-10-24T18:03:00.000Z",
                    "currency_code": "USD",
                    "description": "Mobile App Deposit",
                    "card_process_mode": null,
                    "device_type_code": null,
                    "type_code": null,
                    "type_description": null,
                    "is_approved": true,
                    "approval_code": null,
                    "is_reversal": null,
                    "meta": {
                      "customAttribute": "customValue"
                    },
                    "category": "Deposit",
                    "is_triggered_by_user": true,
                    "is_international_override": null,
                    "amount": "200",
                    "interaction_point": "iOS",
                    "status": null,
                    "status_detail": null,
                    "process_method": "ACH",
                    "return_code": null,
                    "return_code_reason": null
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}